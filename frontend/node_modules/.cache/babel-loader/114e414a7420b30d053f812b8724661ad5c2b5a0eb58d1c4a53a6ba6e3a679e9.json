{"ast":null,"code":"import _objectSpread from\"/Users/francescoterragni/Desktop/hayguard/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{apiService}from'../../services/apiService';import'./SensorManagement.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SensorManagement=()=>{const[sensors,setSensors]=useState([]);const[loading,setLoading]=useState(true);const[searchTerm,setSearchTerm]=useState('');const[selectedSensor,setSelectedSensor]=useState(null);const[showAddForm,setShowAddForm]=useState(false);const[newSensor,setNewSensor]=useState({name:'',location:'',balesMonitored:''});// Mock data as fallback\nconst mockSensors=[{id:'HB-2024-001',name:'North Field Sensor A',location:'North Field A',status:'active',temperature:24.5,moisture:15.2,batteryLevel:87,lastReading:'2025-01-15 14:30:22',balesMonitored:156,installDate:'2024-03-15'},{id:'HB-2024-002',name:'South Field Sensor B',location:'South Field B',status:'warning',temperature:78.2,moisture:18.5,batteryLevel:45,lastReading:'2025-01-15 14:28:15',balesMonitored:89,installDate:'2024-04-02'},{id:'HB-2024-003',name:'East Field Sensor C',location:'East Field C',status:'active',temperature:22.1,moisture:14.8,batteryLevel:92,lastReading:'2025-01-15 14:31:05',balesMonitored:203,installDate:'2024-05-20'}];// Load sensors from backend on component mount\nuseEffect(()=>{const loadSensors=async()=>{try{setLoading(true);const sensorsData=await apiService.getSensors();setSensors(sensorsData);}catch(error){console.error('Failed to load sensors from backend:',error);// Use mock data as fallback\nsetSensors(mockSensors);}finally{setLoading(false);}};loadSensors();},[]);const handleAddSensor=async e=>{e.preventDefault();const sensorId=\"HB-2024-\".concat(String(sensors.length+1).padStart(3,'0'));const newSensorData={id:sensorId,name:newSensor.name,location:newSensor.location,status:'active',temperature:22.0,moisture:14.0,batteryLevel:100,lastReading:new Date().toISOString().slice(0,19).replace('T',' '),balesMonitored:parseInt(newSensor.balesMonitored)||0,installDate:new Date().toISOString().split('T')[0]};try{// Try to save to backend first\nawait apiService.createSensor(newSensorData);// If successful, reload sensors from backend\nconst updatedSensors=await apiService.getSensors();setSensors(updatedSensors);// Reset form\nsetShowAddForm(false);setNewSensor({name:'',location:'',balesMonitored:''});console.log('Sensor added successfully to backend');}catch(error){console.error('Failed to add sensor to backend:',error);// Fallback: Add to local state only\nsetSensors([...sensors,newSensorData]);setShowAddForm(false);setNewSensor({name:'',location:'',balesMonitored:''});alert('Sensor added locally (backend connection failed)');}};const getSensorData=sensorId=>{return[{date:'2025-01-15',time:'14:30',temperature:24.5,moisture:15.2},{date:'2025-01-15',time:'14:00',temperature:24.2,moisture:15.0},{date:'2025-01-15',time:'13:30',temperature:23.8,moisture:14.8},{date:'2025-01-15',time:'13:00',temperature:23.5,moisture:14.6},{date:'2025-01-15',time:'12:30',temperature:23.2,moisture:14.4},{date:'2025-01-15',time:'12:00',temperature:22.9,moisture:14.2},{date:'2025-01-15',time:'11:30',temperature:22.7,moisture:14.5},{date:'2025-01-15',time:'11:00',temperature:22.5,moisture:14.4}];};const filteredSensors=sensors.filter(sensor=>sensor.name.toLowerCase().includes(searchTerm.toLowerCase())||sensor.location.toLowerCase().includes(searchTerm.toLowerCase())||sensor.id.toLowerCase().includes(searchTerm.toLowerCase()));if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"sensor-management loading\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\",children:\"Loading sensors...\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"sensor-management\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sensor-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Sensor Management\"}),/*#__PURE__*/_jsx(\"button\",{className:\"add-sensor-btn\",onClick:()=>setShowAddForm(true),children:\"+ Add New Sensor\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sensor-controls\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"search-bar\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search sensors by name, location, or ID...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value)})}),/*#__PURE__*/_jsxs(\"div\",{className:\"sensor-stats\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"stat\",children:[\"Total: \",sensors.length]}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat active\",children:[\"Active: \",sensors.filter(s=>s.status==='active').length]}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat warning\",children:[\"Warning: \",sensors.filter(s=>s.status==='warning').length]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"sensors-grid\",children:filteredSensors.map(sensor=>/*#__PURE__*/_jsxs(\"div\",{className:\"sensor-card \".concat(sensor.status),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sensor-card-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:sensor.name}),/*#__PURE__*/_jsx(\"span\",{className:\"status-badge \".concat(sensor.status),children:sensor.status})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sensor-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"ID:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:sensor.id})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Location:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:sensor.location})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Temperature:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value\",children:[sensor.temperature,\"\\xB0C\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Moisture:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value\",children:[sensor.moisture,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Battery:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value\",children:[sensor.batteryLevel,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Bales:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:sensor.balesMonitored})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Last Reading:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:sensor.lastReading})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sensor-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn-secondary\",onClick:()=>setSelectedSensor(sensor),children:\"View Details\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-primary\",children:\"Edit\"})]})]},sensor.id))}),showAddForm&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"add-sensor-modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add New Sensor\"}),/*#__PURE__*/_jsx(\"button\",{className:\"close-btn\",onClick:()=>setShowAddForm(false),children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleAddSensor,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"sensorName\",children:\"Sensor Name\"}),/*#__PURE__*/_jsx(\"input\",{id:\"sensorName\",type:\"text\",value:newSensor.name,onChange:e=>setNewSensor(_objectSpread(_objectSpread({},newSensor),{},{name:e.target.value})),placeholder:\"e.g., North Field Sensor D\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"sensorLocation\",children:\"Location\"}),/*#__PURE__*/_jsx(\"input\",{id:\"sensorLocation\",type:\"text\",value:newSensor.location,onChange:e=>setNewSensor(_objectSpread(_objectSpread({},newSensor),{},{location:e.target.value})),placeholder:\"e.g., North Field D\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"balesMonitored\",children:\"Bales Monitored\"}),/*#__PURE__*/_jsx(\"input\",{id:\"balesMonitored\",type:\"number\",value:newSensor.balesMonitored,onChange:e=>setNewSensor(_objectSpread(_objectSpread({},newSensor),{},{balesMonitored:e.target.value})),placeholder:\"e.g., 150\",min:\"0\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setShowAddForm(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn-primary\",children:\"Add Sensor\"})]})]})]})}),selectedSensor&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"sensor-details-modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Sensor Details - \",selectedSensor.name]}),/*#__PURE__*/_jsx(\"button\",{className:\"close-btn\",onClick:()=>setSelectedSensor(null),children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sensor-details-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sensor-overview\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Overview\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"details-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"detail-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Sensor ID:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:selectedSensor.id})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Location:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:selectedSensor.location})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Install Date:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:selectedSensor.installDate})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Status:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value status \".concat(selectedSensor.status),children:selectedSensor.status})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sensor-readings\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Recent Readings\"}),/*#__PURE__*/_jsx(\"div\",{className:\"readings-table\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Time\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Temperature\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Moisture\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:getSensorData(selectedSensor.id).map((reading,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:reading.date}),/*#__PURE__*/_jsx(\"td\",{children:reading.time}),/*#__PURE__*/_jsxs(\"td\",{children:[reading.temperature,\"\\xB0C\"]}),/*#__PURE__*/_jsxs(\"td\",{children:[reading.moisture,\"%\"]})]},index))})]})})]})]})]})})]});};export default SensorManagement;","map":{"version":3,"names":["React","useState","useEffect","apiService","jsx","_jsx","jsxs","_jsxs","SensorManagement","sensors","setSensors","loading","setLoading","searchTerm","setSearchTerm","selectedSensor","setSelectedSensor","showAddForm","setShowAddForm","newSensor","setNewSensor","name","location","balesMonitored","mockSensors","id","status","temperature","moisture","batteryLevel","lastReading","installDate","loadSensors","sensorsData","getSensors","error","console","handleAddSensor","e","preventDefault","sensorId","concat","String","length","padStart","newSensorData","Date","toISOString","slice","replace","parseInt","split","createSensor","updatedSensors","log","alert","getSensorData","date","time","filteredSensors","filter","sensor","toLowerCase","includes","className","children","onClick","type","placeholder","value","onChange","target","s","map","onSubmit","htmlFor","_objectSpread","required","min","reading","index"],"sources":["/Users/francescoterragni/Desktop/hayguard/frontend/src/components/Sensors/SensorManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { apiService } from '../../services/apiService';\nimport './SensorManagement.css';\n\nconst SensorManagement = () => {\n  const [sensors, setSensors] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedSensor, setSelectedSensor] = useState(null);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [newSensor, setNewSensor] = useState({\n    name: '',\n    location: '',\n    balesMonitored: ''\n  });\n\n  // Mock data as fallback\n  const mockSensors = [\n    {\n      id: 'HB-2024-001',\n      name: 'North Field Sensor A',\n      location: 'North Field A',\n      status: 'active',\n      temperature: 24.5,\n      moisture: 15.2,\n      batteryLevel: 87,\n      lastReading: '2025-01-15 14:30:22',\n      balesMonitored: 156,\n      installDate: '2024-03-15'\n    },\n    {\n      id: 'HB-2024-002',\n      name: 'South Field Sensor B',\n      location: 'South Field B',\n      status: 'warning',\n      temperature: 78.2,\n      moisture: 18.5,\n      batteryLevel: 45,\n      lastReading: '2025-01-15 14:28:15',\n      balesMonitored: 89,\n      installDate: '2024-04-02'\n    },\n    {\n      id: 'HB-2024-003',\n      name: 'East Field Sensor C',\n      location: 'East Field C',\n      status: 'active',\n      temperature: 22.1,\n      moisture: 14.8,\n      batteryLevel: 92,\n      lastReading: '2025-01-15 14:31:05',\n      balesMonitored: 203,\n      installDate: '2024-05-20'\n    }\n  ];\n\n  // Load sensors from backend on component mount\n  useEffect(() => {\n    const loadSensors = async () => {\n      try {\n        setLoading(true);\n        const sensorsData = await apiService.getSensors();\n        setSensors(sensorsData);\n      } catch (error) {\n        console.error('Failed to load sensors from backend:', error);\n        // Use mock data as fallback\n        setSensors(mockSensors);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadSensors();\n  }, []);\n\n  const handleAddSensor = async (e) => {\n    e.preventDefault();\n    \n    const sensorId = `HB-2024-${String(sensors.length + 1).padStart(3, '0')}`;\n    const newSensorData = {\n      id: sensorId,\n      name: newSensor.name,\n      location: newSensor.location,\n      status: 'active',\n      temperature: 22.0,\n      moisture: 14.0,\n      batteryLevel: 100,\n      lastReading: new Date().toISOString().slice(0, 19).replace('T', ' '),\n      balesMonitored: parseInt(newSensor.balesMonitored) || 0,\n      installDate: new Date().toISOString().split('T')[0]\n    };\n\n    try {\n      // Try to save to backend first\n      await apiService.createSensor(newSensorData);\n      \n      // If successful, reload sensors from backend\n      const updatedSensors = await apiService.getSensors();\n      setSensors(updatedSensors);\n      \n      // Reset form\n      setShowAddForm(false);\n      setNewSensor({ name: '', location: '', balesMonitored: '' });\n      \n      console.log('Sensor added successfully to backend');\n    } catch (error) {\n      console.error('Failed to add sensor to backend:', error);\n      \n      // Fallback: Add to local state only\n      setSensors([...sensors, newSensorData]);\n      setShowAddForm(false);\n      setNewSensor({ name: '', location: '', balesMonitored: '' });\n      \n      alert('Sensor added locally (backend connection failed)');\n    }\n  };\n\n  const getSensorData = (sensorId) => {\n    return [\n      { date: '2025-01-15', time: '14:30', temperature: 24.5, moisture: 15.2 },\n      { date: '2025-01-15', time: '14:00', temperature: 24.2, moisture: 15.0 },\n      { date: '2025-01-15', time: '13:30', temperature: 23.8, moisture: 14.8 },\n      { date: '2025-01-15', time: '13:00', temperature: 23.5, moisture: 14.6 },\n      { date: '2025-01-15', time: '12:30', temperature: 23.2, moisture: 14.4 },\n      { date: '2025-01-15', time: '12:00', temperature: 22.9, moisture: 14.2 },\n      { date: '2025-01-15', time: '11:30', temperature: 22.7, moisture: 14.5 },\n      { date: '2025-01-15', time: '11:00', temperature: 22.5, moisture: 14.4 }\n    ];\n  };\n\n  const filteredSensors = sensors.filter(sensor =>\n    sensor.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    sensor.location.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    sensor.id.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  if (loading) {\n    return (\n      <div className=\"sensor-management loading\">\n        <div className=\"loading-spinner\">Loading sensors...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"sensor-management\">\n      <div className=\"sensor-header\">\n        <h1>Sensor Management</h1>\n        <button \n          className=\"add-sensor-btn\"\n          onClick={() => setShowAddForm(true)}\n        >\n          + Add New Sensor\n        </button>\n      </div>\n\n      <div className=\"sensor-controls\">\n        <div className=\"search-bar\">\n          <input\n            type=\"text\"\n            placeholder=\"Search sensors by name, location, or ID...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n        <div className=\"sensor-stats\">\n          <span className=\"stat\">Total: {sensors.length}</span>\n          <span className=\"stat active\">Active: {sensors.filter(s => s.status === 'active').length}</span>\n          <span className=\"stat warning\">Warning: {sensors.filter(s => s.status === 'warning').length}</span>\n        </div>\n      </div>\n\n      <div className=\"sensors-grid\">\n        {filteredSensors.map(sensor => (\n          <div key={sensor.id} className={`sensor-card ${sensor.status}`}>\n            <div className=\"sensor-card-header\">\n              <h3>{sensor.name}</h3>\n              <span className={`status-badge ${sensor.status}`}>\n                {sensor.status}\n              </span>\n            </div>\n            \n            <div className=\"sensor-info\">\n              <div className=\"info-item\">\n                <span className=\"label\">ID:</span>\n                <span className=\"value\">{sensor.id}</span>\n              </div>\n              <div className=\"info-item\">\n                <span className=\"label\">Location:</span>\n                <span className=\"value\">{sensor.location}</span>\n              </div>\n              <div className=\"info-item\">\n                <span className=\"label\">Temperature:</span>\n                <span className=\"value\">{sensor.temperature}°C</span>\n              </div>\n              <div className=\"info-item\">\n                <span className=\"label\">Moisture:</span>\n                <span className=\"value\">{sensor.moisture}%</span>\n              </div>\n              <div className=\"info-item\">\n                <span className=\"label\">Battery:</span>\n                <span className=\"value\">{sensor.batteryLevel}%</span>\n              </div>\n              <div className=\"info-item\">\n                <span className=\"label\">Bales:</span>\n                <span className=\"value\">{sensor.balesMonitored}</span>\n              </div>\n              <div className=\"info-item\">\n                <span className=\"label\">Last Reading:</span>\n                <span className=\"value\">{sensor.lastReading}</span>\n              </div>\n            </div>\n\n            <div className=\"sensor-actions\">\n              <button \n                className=\"btn-secondary\"\n                onClick={() => setSelectedSensor(sensor)}\n              >\n                View Details\n              </button>\n              <button className=\"btn-primary\">Edit</button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {showAddForm && (\n        <div className=\"modal-overlay\">\n          <div className=\"add-sensor-modal\">\n            <div className=\"modal-header\">\n              <h2>Add New Sensor</h2>\n              <button \n                className=\"close-btn\"\n                onClick={() => setShowAddForm(false)}\n              >\n                ×\n              </button>\n            </div>\n            <form onSubmit={handleAddSensor}>\n              <div className=\"form-grid\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"sensorName\">Sensor Name</label>\n                  <input\n                    id=\"sensorName\"\n                    type=\"text\"\n                    value={newSensor.name}\n                    onChange={(e) => setNewSensor({...newSensor, name: e.target.value})}\n                    placeholder=\"e.g., North Field Sensor D\"\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"sensorLocation\">Location</label>\n                  <input\n                    id=\"sensorLocation\"\n                    type=\"text\"\n                    value={newSensor.location}\n                    onChange={(e) => setNewSensor({...newSensor, location: e.target.value})}\n                    placeholder=\"e.g., North Field D\"\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"balesMonitored\">Bales Monitored</label>\n                  <input\n                    id=\"balesMonitored\"\n                    type=\"number\"\n                    value={newSensor.balesMonitored}\n                    onChange={(e) => setNewSensor({...newSensor, balesMonitored: e.target.value})}\n                    placeholder=\"e.g., 150\"\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n              \n              <div className=\"form-actions\">\n                <button type=\"button\" onClick={() => setShowAddForm(false)}>\n                  Cancel\n                </button>\n                <button type=\"submit\" className=\"btn-primary\">\n                  Add Sensor\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {selectedSensor && (\n        <div className=\"modal-overlay\">\n          <div className=\"sensor-details-modal\">\n            <div className=\"modal-header\">\n              <h2>Sensor Details - {selectedSensor.name}</h2>\n              <button \n                className=\"close-btn\"\n                onClick={() => setSelectedSensor(null)}\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"sensor-details-content\">\n              <div className=\"sensor-overview\">\n                <h3>Overview</h3>\n                <div className=\"details-grid\">\n                  <div className=\"detail-item\">\n                    <span className=\"label\">Sensor ID:</span>\n                    <span className=\"value\">{selectedSensor.id}</span>\n                  </div>\n                  <div className=\"detail-item\">\n                    <span className=\"label\">Location:</span>\n                    <span className=\"value\">{selectedSensor.location}</span>\n                  </div>\n                  <div className=\"detail-item\">\n                    <span className=\"label\">Install Date:</span>\n                    <span className=\"value\">{selectedSensor.installDate}</span>\n                  </div>\n                  <div className=\"detail-item\">\n                    <span className=\"label\">Status:</span>\n                    <span className={`value status ${selectedSensor.status}`}>\n                      {selectedSensor.status}\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"sensor-readings\">\n                <h3>Recent Readings</h3>\n                <div className=\"readings-table\">\n                  <table>\n                    <thead>\n                      <tr>\n                        <th>Date</th>\n                        <th>Time</th>\n                        <th>Temperature</th>\n                        <th>Moisture</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {getSensorData(selectedSensor.id).map((reading, index) => (\n                        <tr key={index}>\n                          <td>{reading.date}</td>\n                          <td>{reading.time}</td>\n                          <td>{reading.temperature}°C</td>\n                          <td>{reading.moisture}%</td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SensorManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}