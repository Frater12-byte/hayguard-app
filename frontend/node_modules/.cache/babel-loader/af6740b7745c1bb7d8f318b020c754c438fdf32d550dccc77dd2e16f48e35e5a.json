{"ast":null,"code":"import React,{useState}from'react';import'./Team.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Team=()=>{const[teamMembers,setTeamMembers]=useState([{id:1,name:'John Smith',email:'john.smith@springfield.farm',role:'Farm Owner',status:'active',joinDate:'2024-01-15',avatar:'/default-avatar.png'},{id:2,name:'Sarah Wilson',email:'sarah.wilson@springfield.farm',role:'Farm Manager',status:'active',joinDate:'2024-02-20',avatar:'/default-avatar.png'}]);const[inviteEmail,setInviteEmail]=useState('');const[inviteRole,setInviteRole]=useState('viewer');const[emailStatus,setEmailStatus]=useState('');const[showInviteForm,setShowInviteForm]=useState(false);const handleInviteUser=async e=>{e.preventDefault();setEmailStatus('sending');// Mock email sending process\ntry{await new Promise(resolve=>setTimeout(resolve,2000));// For demo purposes, we'll show different outcomes\nconst success=Math.random()>0.3;// 70% success rate for demo\nif(success){setEmailStatus('success');setInviteEmail('');setInviteRole('viewer');setShowInviteForm(false);// Note: In a real app, the user would be added after they accept the invite\n// For demo, we'll add them immediately\nconst newMember={id:teamMembers.length+1,name:'Pending User',email:inviteEmail,role:inviteRole,status:'pending',joinDate:new Date().toISOString().split('T')[0],avatar:'/default-avatar.png'};setTeamMembers([...teamMembers,newMember]);}else{setEmailStatus('error');}setTimeout(()=>setEmailStatus(''),5000);}catch(error){setEmailStatus('error');setTimeout(()=>setEmailStatus(''),5000);}};const handlePasswordReset=async memberId=>{setEmailStatus('sending-reset');try{await new Promise(resolve=>setTimeout(resolve,1500));// Mock password reset email\nconst success=Math.random()>0.2;// 80% success rate for demo\nif(success){setEmailStatus('reset-success');}else{setEmailStatus('reset-error');}setTimeout(()=>setEmailStatus(''),5000);}catch(error){setEmailStatus('reset-error');setTimeout(()=>setEmailStatus(''),5000);}};const getStatusColor=status=>{switch(status){case'active':return'#28a745';case'pending':return'#ffc107';case'inactive':return'#6c757d';default:return'#6c757d';}};return/*#__PURE__*/_jsxs(\"div\",{className:\"team-management\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"team-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Team Management\"}),/*#__PURE__*/_jsx(\"button\",{className:\"invite-btn\",onClick:()=>setShowInviteForm(true),children:\"+ Invite Team Member\"})]}),emailStatus==='sending'&&/*#__PURE__*/_jsx(\"div\",{className:\"status-message info\",children:\"\\uD83D\\uDCE7 Sending invitation email...\"}),emailStatus==='success'&&/*#__PURE__*/_jsx(\"div\",{className:\"status-message success\",children:\"\\u2705 Invitation email sent successfully!\"}),emailStatus==='error'&&/*#__PURE__*/_jsxs(\"div\",{className:\"status-message error\",children:[\"\\u274C Failed to send invitation email. Please check the email address and try again.\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"small\",{children:\"Note: This is a demo - email functionality requires backend configuration.\"})]}),emailStatus==='sending-reset'&&/*#__PURE__*/_jsx(\"div\",{className:\"status-message info\",children:\"\\uD83D\\uDCE7 Sending password reset email...\"}),emailStatus==='reset-success'&&/*#__PURE__*/_jsx(\"div\",{className:\"status-message success\",children:\"\\u2705 Password reset email sent successfully!\"}),emailStatus==='reset-error'&&/*#__PURE__*/_jsxs(\"div\",{className:\"status-message error\",children:[\"\\u274C Failed to send password reset email. Please try again.\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"small\",{children:\"Note: This is a demo - email functionality requires backend configuration.\"})]}),showInviteForm&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"invite-modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Invite Team Member\"}),/*#__PURE__*/_jsx(\"button\",{className:\"close-modal-btn\",onClick:()=>setShowInviteForm(false),children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleInviteUser,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"inviteEmail\",children:\"Email Address\"}),/*#__PURE__*/_jsx(\"input\",{id:\"inviteEmail\",type:\"email\",value:inviteEmail,onChange:e=>setInviteEmail(e.target.value),placeholder:\"Enter email address\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"inviteRole\",children:\"Role\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"inviteRole\",value:inviteRole,onChange:e=>setInviteRole(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"viewer\",children:\"Viewer\"}),/*#__PURE__*/_jsx(\"option\",{value:\"manager\",children:\"Manager\"}),/*#__PURE__*/_jsx(\"option\",{value:\"admin\",children:\"Admin\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setShowInviteForm(false),className:\"cancel-btn\",children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"send-invite-btn\",disabled:emailStatus==='sending',children:emailStatus==='sending'?'Sending...':'Send Invitation'})]})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"team-members\",children:teamMembers.map(member=>/*#__PURE__*/_jsxs(\"div\",{className:\"member-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"member-info\",children:[/*#__PURE__*/_jsx(\"img\",{src:member.avatar,alt:member.name,className:\"member-avatar\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"member-details\",children:[/*#__PURE__*/_jsx(\"h3\",{children:member.name}),/*#__PURE__*/_jsx(\"p\",{className:\"member-email\",children:member.email}),/*#__PURE__*/_jsxs(\"div\",{className:\"member-meta\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"member-role\",children:member.role}),/*#__PURE__*/_jsx(\"span\",{className:\"member-status\",style:{color:getStatusColor(member.status)},children:member.status.toUpperCase()})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"member-join-date\",children:[\"Joined: \",member.joinDate]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"member-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"reset-password-btn\",onClick:()=>handlePasswordReset(member.id),disabled:emailStatus==='sending-reset',children:\"Reset Password\"})})]},member.id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"email-notice\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Email Configuration\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Email functionality is currently in demo mode. To enable real email sending, configure:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"SMTP server settings in backend configuration\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Email service provider (SendGrid, AWS SES, etc.)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Email templates for invitations and password resets\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Domain verification for reliable delivery\"})]})]})]});};export default Team;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Team","teamMembers","setTeamMembers","id","name","email","role","status","joinDate","avatar","inviteEmail","setInviteEmail","inviteRole","setInviteRole","emailStatus","setEmailStatus","showInviteForm","setShowInviteForm","handleInviteUser","e","preventDefault","Promise","resolve","setTimeout","success","Math","random","newMember","length","Date","toISOString","split","error","handlePasswordReset","memberId","getStatusColor","className","children","onClick","onSubmit","htmlFor","type","value","onChange","target","placeholder","required","disabled","map","member","src","alt","style","color","toUpperCase"],"sources":["/Users/francescoterragni/Desktop/hayguard/frontend/src/components/Team/Team.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Team.css';\n\nconst Team = () => {\n  const [teamMembers, setTeamMembers] = useState([\n    {\n      id: 1,\n      name: 'John Smith',\n      email: 'john.smith@springfield.farm',\n      role: 'Farm Owner',\n      status: 'active',\n      joinDate: '2024-01-15',\n      avatar: '/default-avatar.png'\n    },\n    {\n      id: 2,\n      name: 'Sarah Wilson',\n      email: 'sarah.wilson@springfield.farm',\n      role: 'Farm Manager',\n      status: 'active',\n      joinDate: '2024-02-20',\n      avatar: '/default-avatar.png'\n    }\n  ]);\n\n  const [inviteEmail, setInviteEmail] = useState('');\n  const [inviteRole, setInviteRole] = useState('viewer');\n  const [emailStatus, setEmailStatus] = useState('');\n  const [showInviteForm, setShowInviteForm] = useState(false);\n\n  const handleInviteUser = async (e) => {\n    e.preventDefault();\n    setEmailStatus('sending');\n    \n    // Mock email sending process\n    try {\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      // For demo purposes, we'll show different outcomes\n      const success = Math.random() > 0.3; // 70% success rate for demo\n      \n      if (success) {\n        setEmailStatus('success');\n        setInviteEmail('');\n        setInviteRole('viewer');\n        setShowInviteForm(false);\n        \n        // Note: In a real app, the user would be added after they accept the invite\n        // For demo, we'll add them immediately\n        const newMember = {\n          id: teamMembers.length + 1,\n          name: 'Pending User',\n          email: inviteEmail,\n          role: inviteRole,\n          status: 'pending',\n          joinDate: new Date().toISOString().split('T')[0],\n          avatar: '/default-avatar.png'\n        };\n        setTeamMembers([...teamMembers, newMember]);\n      } else {\n        setEmailStatus('error');\n      }\n      \n      setTimeout(() => setEmailStatus(''), 5000);\n    } catch (error) {\n      setEmailStatus('error');\n      setTimeout(() => setEmailStatus(''), 5000);\n    }\n  };\n\n  const handlePasswordReset = async (memberId) => {\n    setEmailStatus('sending-reset');\n    \n    try {\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      \n      // Mock password reset email\n      const success = Math.random() > 0.2; // 80% success rate for demo\n      \n      if (success) {\n        setEmailStatus('reset-success');\n      } else {\n        setEmailStatus('reset-error');\n      }\n      \n      setTimeout(() => setEmailStatus(''), 5000);\n    } catch (error) {\n      setEmailStatus('reset-error');\n      setTimeout(() => setEmailStatus(''), 5000);\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'active': return '#28a745';\n      case 'pending': return '#ffc107';\n      case 'inactive': return '#6c757d';\n      default: return '#6c757d';\n    }\n  };\n\n  return (\n    <div className=\"team-management\">\n      <div className=\"team-header\">\n        <h1>Team Management</h1>\n        <button \n          className=\"invite-btn\"\n          onClick={() => setShowInviteForm(true)}\n        >\n          + Invite Team Member\n        </button>\n      </div>\n\n      {/* Email Status Messages */}\n      {emailStatus === 'sending' && (\n        <div className=\"status-message info\">\n          📧 Sending invitation email...\n        </div>\n      )}\n      \n      {emailStatus === 'success' && (\n        <div className=\"status-message success\">\n          ✅ Invitation email sent successfully!\n        </div>\n      )}\n      \n      {emailStatus === 'error' && (\n        <div className=\"status-message error\">\n          ❌ Failed to send invitation email. Please check the email address and try again.\n          <br />\n          <small>Note: This is a demo - email functionality requires backend configuration.</small>\n        </div>\n      )}\n\n      {emailStatus === 'sending-reset' && (\n        <div className=\"status-message info\">\n          📧 Sending password reset email...\n        </div>\n      )}\n      \n      {emailStatus === 'reset-success' && (\n        <div className=\"status-message success\">\n          ✅ Password reset email sent successfully!\n        </div>\n      )}\n      \n      {emailStatus === 'reset-error' && (\n        <div className=\"status-message error\">\n          ❌ Failed to send password reset email. Please try again.\n          <br />\n          <small>Note: This is a demo - email functionality requires backend configuration.</small>\n        </div>\n      )}\n\n      {/* Invite Form Modal */}\n      {showInviteForm && (\n        <div className=\"modal-overlay\">\n          <div className=\"invite-modal\">\n            <div className=\"modal-header\">\n              <h3>Invite Team Member</h3>\n              <button \n                className=\"close-modal-btn\"\n                onClick={() => setShowInviteForm(false)}\n              >\n                ×\n              </button>\n            </div>\n            \n            <form onSubmit={handleInviteUser}>\n              <div className=\"form-group\">\n                <label htmlFor=\"inviteEmail\">Email Address</label>\n                <input\n                  id=\"inviteEmail\"\n                  type=\"email\"\n                  value={inviteEmail}\n                  onChange={(e) => setInviteEmail(e.target.value)}\n                  placeholder=\"Enter email address\"\n                  required\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"inviteRole\">Role</label>\n                <select\n                  id=\"inviteRole\"\n                  value={inviteRole}\n                  onChange={(e) => setInviteRole(e.target.value)}\n                >\n                  <option value=\"viewer\">Viewer</option>\n                  <option value=\"manager\">Manager</option>\n                  <option value=\"admin\">Admin</option>\n                </select>\n              </div>\n              \n              <div className=\"modal-actions\">\n                <button \n                  type=\"button\" \n                  onClick={() => setShowInviteForm(false)}\n                  className=\"cancel-btn\"\n                >\n                  Cancel\n                </button>\n                <button \n                  type=\"submit\" \n                  className=\"send-invite-btn\"\n                  disabled={emailStatus === 'sending'}\n                >\n                  {emailStatus === 'sending' ? 'Sending...' : 'Send Invitation'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Team Members List */}\n      <div className=\"team-members\">\n        {teamMembers.map(member => (\n          <div key={member.id} className=\"member-card\">\n            <div className=\"member-info\">\n              <img src={member.avatar} alt={member.name} className=\"member-avatar\" />\n              <div className=\"member-details\">\n                <h3>{member.name}</h3>\n                <p className=\"member-email\">{member.email}</p>\n                <div className=\"member-meta\">\n                  <span className=\"member-role\">{member.role}</span>\n                  <span \n                    className=\"member-status\"\n                    style={{ color: getStatusColor(member.status) }}\n                  >\n                    {member.status.toUpperCase()}\n                  </span>\n                </div>\n                <p className=\"member-join-date\">Joined: {member.joinDate}</p>\n              </div>\n            </div>\n            \n            <div className=\"member-actions\">\n              <button \n                className=\"reset-password-btn\"\n                onClick={() => handlePasswordReset(member.id)}\n                disabled={emailStatus === 'sending-reset'}\n              >\n                Reset Password\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Email Configuration Notice */}\n      <div className=\"email-notice\">\n        <h3>Email Configuration</h3>\n        <p>\n          Email functionality is currently in demo mode. To enable real email sending, configure:\n        </p>\n        <ul>\n          <li>SMTP server settings in backend configuration</li>\n          <li>Email service provider (SendGrid, AWS SES, etc.)</li>\n          <li>Email templates for invitations and password resets</li>\n          <li>Domain verification for reliable delivery</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Team;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}