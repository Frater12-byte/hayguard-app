{"ast":null,"code":"import React,{useState,useEffect}from'react';import{apiService}from'../services/apiService';import'./Dashboard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=_ref=>{let{user}=_ref;const[selectedDate,setSelectedDate]=useState(new Date().toISOString().split('T')[0]);const[alerts,setAlerts]=useState([]);const[kpiData,setKpiData]=useState({activeSensors:0,criticalAlerts:0,totalBales:0,avgTemperature:0,avgMoisture:0,systemHealth:0});const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Fetch dashboard data from API\nuseEffect(()=>{const fetchDashboardData=async()=>{try{setLoading(true);setError(null);// Fetch dashboard stats\nconst stats=await apiService.getDashboardStats();setKpiData(stats);// Fetch recent alerts\nconst alertsData=await apiService.getAlerts();setAlerts(alertsData);}catch(error){console.error('Error fetching dashboard data:',error);setError(error.message);// Keep mock data as fallback for development\nsetKpiData({activeSensors:12,criticalAlerts:3,totalBales:1247,avgTemperature:23.5,avgMoisture:14.2,systemHealth:98});setAlerts([{id:1,type:'temperature',message:'High temperature detected in Barn A',timestamp:'2024-01-15T10:30:00Z',severity:'critical'},{id:2,type:'moisture',message:'Moisture level rising in Section B',timestamp:'2024-01-15T09:15:00Z',severity:'warning'}]);}finally{setLoading(false);}};fetchDashboardData();},[]);// Fetch alerts when date changes\nuseEffect(()=>{const fetchAlerts=async()=>{try{const startDate=selectedDate;const endDate=selectedDate;const alertsData=await apiService.getAlerts(startDate,endDate);setAlerts(alertsData);}catch(error){console.error('Error fetching alerts:',error);}};fetchAlerts();},[selectedDate]);if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"dashboard loading\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\",children:\"Loading dashboard data...\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"HayGuard Dashboard\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"date-selector\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"date\",children:\"Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"date\",value:selectedDate,onChange:e=>setSelectedDate(e.target.value)})]})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-banner\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u26A0\\uFE0F Using demo data - API connection failed: \",error]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"kpi-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"kpi-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"kpi-value\",children:kpiData.activeSensors}),/*#__PURE__*/_jsx(\"div\",{className:\"kpi-label\",children:\"Active Sensors\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"kpi-card critical\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"kpi-value\",children:kpiData.criticalAlerts}),/*#__PURE__*/_jsx(\"div\",{className:\"kpi-label\",children:\"Critical Alerts\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"kpi-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"kpi-value\",children:kpiData.totalBales}),/*#__PURE__*/_jsx(\"div\",{className:\"kpi-label\",children:\"Total Bales\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"kpi-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"kpi-value\",children:[kpiData.avgTemperature,\"\\xB0C\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"kpi-label\",children:\"Avg Temperature\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"kpi-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"kpi-value\",children:[kpiData.avgMoisture,\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"kpi-label\",children:\"Avg Moisture\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"kpi-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"kpi-value\",children:[kpiData.systemHealth,\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"kpi-label\",children:\"System Health\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"alerts-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Recent Alerts\"}),/*#__PURE__*/_jsx(\"div\",{className:\"alerts-list\",children:alerts.length>0?alerts.map(alert=>/*#__PURE__*/_jsxs(\"div\",{className:\"alert-item \".concat(alert.severity),children:[/*#__PURE__*/_jsx(\"div\",{className:\"alert-type\",children:alert.type}),/*#__PURE__*/_jsx(\"div\",{className:\"alert-message\",children:alert.message}),/*#__PURE__*/_jsx(\"div\",{className:\"alert-timestamp\",children:new Date(alert.timestamp).toLocaleString()})]},alert.id)):/*#__PURE__*/_jsx(\"div\",{className:\"no-alerts\",children:\"No alerts for selected date\"})})]})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","apiService","jsx","_jsx","jsxs","_jsxs","Dashboard","_ref","user","selectedDate","setSelectedDate","Date","toISOString","split","alerts","setAlerts","kpiData","setKpiData","activeSensors","criticalAlerts","totalBales","avgTemperature","avgMoisture","systemHealth","loading","setLoading","error","setError","fetchDashboardData","stats","getDashboardStats","alertsData","getAlerts","console","message","id","type","timestamp","severity","fetchAlerts","startDate","endDate","className","children","htmlFor","value","onChange","e","target","length","map","alert","concat","toLocaleString"],"sources":["/Users/francescoterragni/Desktop/hayguard/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { apiService } from '../services/apiService';\nimport './Dashboard.css';\n\nconst Dashboard = ({ user }) => {\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [alerts, setAlerts] = useState([]);\n  const [kpiData, setKpiData] = useState({\n    activeSensors: 0,\n    criticalAlerts: 0,\n    totalBales: 0,\n    avgTemperature: 0,\n    avgMoisture: 0,\n    systemHealth: 0\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch dashboard data from API\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        \n        // Fetch dashboard stats\n        const stats = await apiService.getDashboardStats();\n        setKpiData(stats);\n        \n        // Fetch recent alerts\n        const alertsData = await apiService.getAlerts();\n        setAlerts(alertsData);\n        \n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n        setError(error.message);\n        // Keep mock data as fallback for development\n        setKpiData({\n          activeSensors: 12,\n          criticalAlerts: 3,\n          totalBales: 1247,\n          avgTemperature: 23.5,\n          avgMoisture: 14.2,\n          systemHealth: 98\n        });\n        setAlerts([\n          {\n            id: 1,\n            type: 'temperature',\n            message: 'High temperature detected in Barn A',\n            timestamp: '2024-01-15T10:30:00Z',\n            severity: 'critical'\n          },\n          {\n            id: 2,\n            type: 'moisture',\n            message: 'Moisture level rising in Section B',\n            timestamp: '2024-01-15T09:15:00Z',\n            severity: 'warning'\n          }\n        ]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchDashboardData();\n  }, []);\n\n  // Fetch alerts when date changes\n  useEffect(() => {\n    const fetchAlerts = async () => {\n      try {\n        const startDate = selectedDate;\n        const endDate = selectedDate;\n        const alertsData = await apiService.getAlerts(startDate, endDate);\n        setAlerts(alertsData);\n      } catch (error) {\n        console.error('Error fetching alerts:', error);\n      }\n    };\n\n    fetchAlerts();\n  }, [selectedDate]);\n\n  if (loading) {\n    return (\n      <div className=\"dashboard loading\">\n        <div className=\"loading-spinner\">Loading dashboard data...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard-header\">\n        <h1>HayGuard Dashboard</h1>\n        <div className=\"date-selector\">\n          <label htmlFor=\"date\">Date:</label>\n          <input\n            type=\"date\"\n            id=\"date\"\n            value={selectedDate}\n            onChange={(e) => setSelectedDate(e.target.value)}\n          />\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"error-banner\">\n          <p>⚠️ Using demo data - API connection failed: {error}</p>\n        </div>\n      )}\n\n      <div className=\"kpi-grid\">\n        <div className=\"kpi-card\">\n          <div className=\"kpi-value\">{kpiData.activeSensors}</div>\n          <div className=\"kpi-label\">Active Sensors</div>\n        </div>\n        <div className=\"kpi-card critical\">\n          <div className=\"kpi-value\">{kpiData.criticalAlerts}</div>\n          <div className=\"kpi-label\">Critical Alerts</div>\n        </div>\n        <div className=\"kpi-card\">\n          <div className=\"kpi-value\">{kpiData.totalBales}</div>\n          <div className=\"kpi-label\">Total Bales</div>\n        </div>\n        <div className=\"kpi-card\">\n          <div className=\"kpi-value\">{kpiData.avgTemperature}°C</div>\n          <div className=\"kpi-label\">Avg Temperature</div>\n        </div>\n        <div className=\"kpi-card\">\n          <div className=\"kpi-value\">{kpiData.avgMoisture}%</div>\n          <div className=\"kpi-label\">Avg Moisture</div>\n        </div>\n        <div className=\"kpi-card\">\n          <div className=\"kpi-value\">{kpiData.systemHealth}%</div>\n          <div className=\"kpi-label\">System Health</div>\n        </div>\n      </div>\n\n      <div className=\"alerts-section\">\n        <h2>Recent Alerts</h2>\n        <div className=\"alerts-list\">\n          {alerts.length > 0 ? (\n            alerts.map((alert) => (\n              <div key={alert.id} className={`alert-item ${alert.severity}`}>\n                <div className=\"alert-type\">{alert.type}</div>\n                <div className=\"alert-message\">{alert.message}</div>\n                <div className=\"alert-timestamp\">\n                  {new Date(alert.timestamp).toLocaleString()}\n                </div>\n              </div>\n            ))\n          ) : (\n            <div className=\"no-alerts\">No alerts for selected date</div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}