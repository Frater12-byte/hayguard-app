{"ast":null,"code":"var _jsxFileName = \"/Users/francescoterragni/Desktop/hayguard/frontend/src/components/Sensors/Sensors.js\",\n  _s = $RefreshSig$();\n// src/components/Sensors/Sensors.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { QrCode, Wifi, WifiOff, AlertTriangle } from 'lucide-react';\nimport dataGenService from '../../services/dataGenerationService';\nimport './Sensors.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Sensors = () => {\n  _s();\n  const navigate = useNavigate();\n  const [sensors, setSensors] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showPairModal, setShowPairModal] = useState(false);\n  const [selectedSensor, setSelectedSensor] = useState(null);\n  const [notification, setNotification] = useState(null);\n  const [qrCode, setQrCode] = useState('');\n\n  // Filter states\n  const [filterStatus, setFilterStatus] = useState('all');\n  const [filterType, setFilterType] = useState('all');\n  const [filterLocation, setFilterLocation] = useState('all');\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Form state for add modal\n  const [formData, setFormData] = useState({\n    name: '',\n    location: '',\n    type: 'temperature_moisture',\n    description: '',\n    balesMonitored: 1,\n    optimalRanges: {\n      temperature: {\n        min: 0,\n        max: 30\n      },\n      moisture: {\n        min: 12,\n        max: 18\n      }\n    }\n  });\n\n  // Load sensors on mount\n  useEffect(() => {\n    loadSensors();\n\n    // Listen for sensor updates\n    const handleSensorsUpdate = () => {\n      loadSensors();\n    };\n    window.addEventListener('sensorsUpdated', handleSensorsUpdate);\n    return () => {\n      window.removeEventListener('sensorsUpdated', handleSensorsUpdate);\n    };\n  }, []);\n  const loadSensors = () => {\n    try {\n      const sensorsData = dataGenService.getAllSensorsWithCurrentData();\n      setSensors(sensorsData);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error loading sensors:', error);\n      showNotification('Error loading sensors', 'error');\n      setLoading(false);\n    }\n  };\n  const showNotification = (message, type = 'success') => {\n    setNotification({\n      message,\n      type\n    });\n    setTimeout(() => setNotification(null), 4000);\n  };\n  const handleAddSensor = () => {\n    setFormData({\n      name: '',\n      location: '',\n      type: 'temperature_moisture',\n      description: '',\n      balesMonitored: 1,\n      optimalRanges: {\n        temperature: {\n          min: 0,\n          max: 30\n        },\n        moisture: {\n          min: 12,\n          max: 18\n        }\n      }\n    });\n    setShowAddModal(true);\n  };\n  const handleViewDetails = sensor => {\n    navigate(`/sensors/${sensor.id}`);\n  };\n  const handleSubmitAdd = async e => {\n    e.preventDefault();\n    try {\n      const newSensor = dataGenService.addSensor(formData);\n      loadSensors();\n      setShowAddModal(false);\n      showNotification(`Sensor created with ID: ${newSensor.id}. Please pair it with a physical sensor.`, 'success');\n    } catch (error) {\n      showNotification('Error adding sensor: ' + error.message, 'error');\n    }\n  };\n  const handlePairSensor = sensor => {\n    setSelectedSensor(sensor);\n    setQrCode('');\n    setShowPairModal(true);\n  };\n  const handleSubmitPair = e => {\n    e.preventDefault();\n    if (!qrCode.trim()) {\n      showNotification('Please enter a QR code', 'error');\n      return;\n    }\n    try {\n      const pairedSensor = dataGenService.pairSensor(selectedSensor.id, qrCode);\n      loadSensors();\n      setShowPairModal(false);\n      setSelectedSensor(null);\n      setQrCode('');\n      showNotification(`Sensor successfully paired! New ID: ${pairedSensor.id}`, 'success');\n    } catch (error) {\n      showNotification('Error pairing sensor: ' + error.message, 'error');\n    }\n  };\n  const handleDeleteSensor = async sensorId => {\n    if (window.confirm('Are you sure you want to delete this sensor?')) {\n      try {\n        dataGenService.deleteSensor(sensorId);\n        loadSensors();\n        showNotification('Sensor deleted successfully!', 'success');\n      } catch (error) {\n        showNotification('Error deleting sensor', 'error');\n      }\n    }\n  };\n  const getStatusBadgeClass = status => {\n    const statusClasses = {\n      online: 'status-badge online',\n      offline: 'status-badge offline',\n      warning: 'status-badge warning',\n      unpaired: 'status-badge unpaired'\n    };\n    return statusClasses[status] || 'status-badge';\n  };\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'online':\n        return /*#__PURE__*/_jsxDEV(Wifi, {\n          size: 14\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 16\n        }, this);\n      case 'offline':\n        return /*#__PURE__*/_jsxDEV(WifiOff, {\n          size: 14\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 16\n        }, this);\n      case 'unpaired':\n        return /*#__PURE__*/_jsxDEV(AlertTriangle, {\n          size: 14\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  const getBatteryClass = level => {\n    if (level > 50) return 'battery-high';\n    if (level > 20) return 'battery-medium';\n    return 'battery-low';\n  };\n  const formatLastUpdate = timestamp => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffInHours = Math.floor((now - date) / (1000 * 60 * 60));\n    if (diffInHours < 1) {\n      const diffInMinutes = Math.floor((now - date) / (1000 * 60));\n      return `${diffInMinutes}m ago`;\n    } else if (diffInHours < 24) {\n      return `${diffInHours}h ago`;\n    } else {\n      const diffInDays = Math.floor(diffInHours / 24);\n      return `${diffInDays}d ago`;\n    }\n  };\n\n  // Filter sensors\n  const filteredSensors = sensors.filter(sensor => {\n    const statusMatch = filterStatus === 'all' || sensor.status === filterStatus;\n    const typeMatch = filterType === 'all' || sensor.type === filterType;\n    const locationMatch = filterLocation === 'all' || sensor.location && sensor.location.includes(filterLocation);\n    const searchMatch = searchTerm === '' || sensor.name && sensor.name.toLowerCase().includes(searchTerm.toLowerCase()) || sensor.location && sensor.location.toLowerCase().includes(searchTerm.toLowerCase()) || sensor.id && sensor.id.toLowerCase().includes(searchTerm.toLowerCase());\n    return statusMatch && typeMatch && locationMatch && searchMatch;\n  });\n  const uniqueLocations = [...new Set(sensors.map(sensor => sensor.location ? sensor.location.split(' - ')[0] : 'Unknown'))];\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensors\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensors-loading\",\n        children: \"Loading sensors...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sensors page-container\",\n    children: [notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `notification notification-${notification.type}`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"notification-close\",\n        onClick: () => setNotification(null),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensors-controls card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search sensors by name, location, or ID...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filterLocation,\n          onChange: e => setFilterLocation(e.target.value),\n          className: \"filter-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All Locations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), uniqueLocations.map(location => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: location,\n            children: location\n          }, location, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filterType,\n          onChange: e => setFilterType(e.target.value),\n          className: \"filter-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"temperature_moisture\",\n            children: \"Temp & Moisture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"temperature\",\n            children: \"Temperature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"moisture\",\n            children: \"Moisture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filterStatus,\n          onChange: e => setFilterStatus(e.target.value),\n          className: \"filter-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"online\",\n            children: \"Online\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"offline\",\n            children: \"Offline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"unpaired\",\n            children: \"Unpaired\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"warning\",\n            children: \"Warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleAddSensor,\n          children: \"+ Add Sensor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => {\n            dataGenService.generateAllReadings();\n            loadSensors();\n            showNotification('Generated new readings for paired sensors!', 'info');\n          },\n          style: {\n            marginLeft: '8px'\n          },\n          children: \"\\uD83D\\uDD04 Generate Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensors-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensors-grid\",\n        children: filteredSensors.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-sensors\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No sensors found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '14px',\n              marginTop: '8px',\n              color: '#6b7280'\n            },\n            children: sensors.length === 0 ? 'Add sensors to start monitoring' : 'Try adjusting your filters'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this) : filteredSensors.map(sensor => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `sensor-card ${sensor.status === 'unpaired' ? 'sensor-unpaired' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sensor-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sensor-title\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: sensor.name || 'Unnamed Sensor'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sensor-id\",\n                children: sensor.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: getStatusBadgeClass(sensor.status),\n              children: [getStatusIcon(sensor.status), sensor.status ? sensor.status.toUpperCase() : 'UNKNOWN']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sensor-location\",\n            children: [\"\\uD83D\\uDCCD \", sensor.location || 'Unknown location']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sensor-bales\",\n            children: [\"\\uD83D\\uDCE6 Monitoring \", sensor.balesMonitored || 0, \" bales\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 17\n          }, this), sensor.status === 'unpaired' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"unpaired-notice\",\n            children: [/*#__PURE__*/_jsxDEV(QrCode, {\n              size: 48,\n              style: {\n                color: '#f59e0b'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"This sensor needs to be paired with a physical device\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary btn-sm\",\n              onClick: () => handlePairSensor(sensor),\n              children: [/*#__PURE__*/_jsxDEV(QrCode, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 23\n              }, this), \"Pair Sensor\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sensor-readings\",\n              children: [sensor.currentTemperature !== null && sensor.currentTemperature !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"reading\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"reading-label\",\n                  children: \"Temperature\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"reading-value\",\n                  children: [sensor.currentTemperature.toFixed(1), \"\\xB0C\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 25\n              }, this), sensor.currentMoisture !== null && sensor.currentMoisture !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"reading\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"reading-label\",\n                  children: \"Moisture\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"reading-value\",\n                  children: [sensor.currentMoisture.toFixed(1), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sensor-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"battery-info\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `battery-indicator ${getBatteryClass(sensor.batteryLevel || 0)}`,\n                  children: [sensor.isCharging ? '⚡' : '🔋', \" \", sensor.batteryLevel || 0, \"%\", sensor.isCharging && /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontSize: '10px',\n                      marginLeft: '4px'\n                    },\n                    children: \"(Charging)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"last-update\",\n                children: [\"Updated: \", formatLastUpdate(sensor.lastUpdate || new Date())]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sensor-actions\",\n            children: [sensor.status !== 'unpaired' && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary btn-sm\",\n              onClick: () => handleViewDetails(sensor),\n              children: \"View Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger btn-sm\",\n              onClick: () => handleDeleteSensor(sensor.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 17\n          }, this)]\n        }, sensor.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), showAddModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowAddModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"18\",\n              height: \"18\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 17\n            }, this), \"Add New Sensor\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setShowAddModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmitAdd,\n            className: \"modal-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"add-name\",\n                  className: \"form-label-required\",\n                  children: \"Sensor Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"add-name\",\n                  value: formData.name,\n                  onChange: e => setFormData({\n                    ...formData,\n                    name: e.target.value\n                  }),\n                  placeholder: \"Barn A Temperature\",\n                  required: true,\n                  className: \"form-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"add-type\",\n                  className: \"form-label-required\",\n                  children: \"Sensor Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"add-type\",\n                  value: formData.type,\n                  onChange: e => setFormData({\n                    ...formData,\n                    type: e.target.value\n                  }),\n                  required: true,\n                  className: \"form-input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"temperature_moisture\",\n                    children: \"Temperature & Moisture\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"temperature\",\n                    children: \"Temperature Only\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 434,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"moisture\",\n                    children: \"Moisture Only\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"add-location\",\n                  className: \"form-label-required\",\n                  children: \"Location\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"add-location\",\n                  value: formData.location,\n                  onChange: e => setFormData({\n                    ...formData,\n                    location: e.target.value\n                  }),\n                  placeholder: \"Barn A - Section 2\",\n                  required: true,\n                  className: \"form-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"add-bales\",\n                  className: \"form-label-required\",\n                  children: \"Bales Monitored\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  id: \"add-bales\",\n                  value: formData.balesMonitored,\n                  onChange: e => setFormData({\n                    ...formData,\n                    balesMonitored: parseInt(e.target.value) || 1\n                  }),\n                  placeholder: \"50\",\n                  min: \"1\",\n                  max: \"1000\",\n                  required: true,\n                  className: \"form-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"form-help\",\n                  children: \"Number of hay bales\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Optimal Ranges\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 19\n              }, this), (formData.type === 'temperature' || formData.type === 'temperature_moisture') && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"add-temp-min\",\n                    children: \"Min Temperature (\\xB0C)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    id: \"add-temp-min\",\n                    value: formData.optimalRanges.temperature.min,\n                    onChange: e => setFormData({\n                      ...formData,\n                      optimalRanges: {\n                        ...formData.optimalRanges,\n                        temperature: {\n                          ...formData.optimalRanges.temperature,\n                          min: parseFloat(e.target.value) || 0\n                        }\n                      }\n                    }),\n                    placeholder: \"0\",\n                    className: \"form-input\",\n                    step: \"0.1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 480,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"add-temp-max\",\n                    children: \"Max Temperature (\\xB0C)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 501,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    id: \"add-temp-max\",\n                    value: formData.optimalRanges.temperature.max,\n                    onChange: e => setFormData({\n                      ...formData,\n                      optimalRanges: {\n                        ...formData.optimalRanges,\n                        temperature: {\n                          ...formData.optimalRanges.temperature,\n                          max: parseFloat(e.target.value) || 0\n                        }\n                      }\n                    }),\n                    placeholder: \"30\",\n                    className: \"form-input\",\n                    step: \"0.1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 21\n              }, this), (formData.type === 'moisture' || formData.type === 'temperature_moisture') && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"add-moisture-min\",\n                    children: \"Min Moisture (%)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 527,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    id: \"add-moisture-min\",\n                    value: formData.optimalRanges.moisture.min,\n                    onChange: e => setFormData({\n                      ...formData,\n                      optimalRanges: {\n                        ...formData.optimalRanges,\n                        moisture: {\n                          ...formData.optimalRanges.moisture,\n                          min: parseFloat(e.target.value) || 0\n                        }\n                      }\n                    }),\n                    placeholder: \"12\",\n                    className: \"form-input\",\n                    step: \"0.1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 528,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"add-moisture-max\",\n                    children: \"Max Moisture (%)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 549,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    id: \"add-moisture-max\",\n                    value: formData.optimalRanges.moisture.max,\n                    onChange: e => setFormData({\n                      ...formData,\n                      optimalRanges: {\n                        ...formData.optimalRanges,\n                        moisture: {\n                          ...formData.optimalRanges.moisture,\n                          max: parseFloat(e.target.value) || 0\n                        }\n                      }\n                    }),\n                    placeholder: \"18\",\n                    className: \"form-input\",\n                    step: \"0.1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 550,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row full-width\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"add-description\",\n                  children: \"Description (Optional)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 576,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  id: \"add-description\",\n                  value: formData.description,\n                  onChange: e => setFormData({\n                    ...formData,\n                    description: e.target.value\n                  }),\n                  placeholder: \"Additional notes about this sensor...\",\n                  className: \"form-input\",\n                  rows: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-notice\",\n              children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Sensor will be in \\\"Unpaired\\\" status until physically paired with the device.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-secondary\",\n            onClick: () => setShowAddModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            onClick: handleSubmitAdd,\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"16\",\n              height: \"16\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"12\",\n                y1: \"5\",\n                x2: \"12\",\n                y2: \"19\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"5\",\n                y1: \"12\",\n                x2: \"19\",\n                y2: \"12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 17\n            }, this), \"Create Sensor\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 9\n    }, this), showPairModal && selectedSensor && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowPairModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(QrCode, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 17\n            }, this), \"Pair Sensor\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setShowPairModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmitPair,\n            className: \"modal-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pair-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pair-sensor-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: selectedSensor.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 641,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Current ID: \", selectedSensor.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 642,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Location: \", selectedSensor.location]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 643,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"qr-placeholder\",\n                children: [/*#__PURE__*/_jsxDEV(QrCode, {\n                  size: 80,\n                  style: {\n                    color: '#F4C430'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 647,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Scan the QR code on your physical sensor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 648,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"qr-code\",\n                className: \"form-label-required\",\n                children: \"Enter QR Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"qr-code\",\n                value: qrCode,\n                onChange: e => setQrCode(e.target.value),\n                placeholder: \"e.g., QR-ABC123XYZ789\",\n                required: true,\n                className: \"form-input\",\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 654,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"form-help\",\n                children: \"Enter the code from the physical sensor's QR label\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-notice\",\n              children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Once paired, the sensor will receive a permanent SENS-xxx ID and begin data collection.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-secondary\",\n            onClick: () => setShowPairModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            onClick: handleSubmitPair,\n            children: [/*#__PURE__*/_jsxDEV(QrCode, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 17\n            }, this), \"Pair Sensor\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n};\n_s(Sensors, \"lEWxr69DyBu6IL0/gF+bu4Vg1ms=\", false, function () {\n  return [useNavigate];\n});\n_c = Sensors;\nexport default Sensors;\nvar _c;\n$RefreshReg$(_c, \"Sensors\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","QrCode","Wifi","WifiOff","AlertTriangle","dataGenService","jsxDEV","_jsxDEV","Fragment","_Fragment","Sensors","_s","navigate","sensors","setSensors","loading","setLoading","showAddModal","setShowAddModal","showPairModal","setShowPairModal","selectedSensor","setSelectedSensor","notification","setNotification","qrCode","setQrCode","filterStatus","setFilterStatus","filterType","setFilterType","filterLocation","setFilterLocation","searchTerm","setSearchTerm","formData","setFormData","name","location","type","description","balesMonitored","optimalRanges","temperature","min","max","moisture","loadSensors","handleSensorsUpdate","window","addEventListener","removeEventListener","sensorsData","getAllSensorsWithCurrentData","error","console","showNotification","message","setTimeout","handleAddSensor","handleViewDetails","sensor","id","handleSubmitAdd","e","preventDefault","newSensor","addSensor","handlePairSensor","handleSubmitPair","trim","pairedSensor","pairSensor","handleDeleteSensor","sensorId","confirm","deleteSensor","getStatusBadgeClass","status","statusClasses","online","offline","warning","unpaired","getStatusIcon","size","fileName","_jsxFileName","lineNumber","columnNumber","getBatteryClass","level","formatLastUpdate","timestamp","date","Date","now","diffInHours","Math","floor","diffInMinutes","diffInDays","filteredSensors","filter","statusMatch","typeMatch","locationMatch","includes","searchMatch","toLowerCase","uniqueLocations","Set","map","split","className","children","onClick","placeholder","value","onChange","target","generateAllReadings","style","marginLeft","length","fontSize","marginTop","color","toUpperCase","currentTemperature","undefined","toFixed","currentMoisture","batteryLevel","isCharging","lastUpdate","stopPropagation","width","height","viewBox","fill","stroke","strokeWidth","d","onSubmit","htmlFor","required","parseInt","parseFloat","step","rows","x1","y1","x2","y2","autoFocus","_c","$RefreshReg$"],"sources":["/Users/francescoterragni/Desktop/hayguard/frontend/src/components/Sensors/Sensors.js"],"sourcesContent":["// src/components/Sensors/Sensors.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { QrCode, Wifi, WifiOff, AlertTriangle } from 'lucide-react';\nimport dataGenService from '../../services/dataGenerationService';\nimport './Sensors.css';\n\nconst Sensors = () => {\n  const navigate = useNavigate();\n  \n  const [sensors, setSensors] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showPairModal, setShowPairModal] = useState(false);\n  const [selectedSensor, setSelectedSensor] = useState(null);\n  const [notification, setNotification] = useState(null);\n  const [qrCode, setQrCode] = useState('');\n  \n  // Filter states\n  const [filterStatus, setFilterStatus] = useState('all');\n  const [filterType, setFilterType] = useState('all');\n  const [filterLocation, setFilterLocation] = useState('all');\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Form state for add modal\n  const [formData, setFormData] = useState({\n    name: '',\n    location: '',\n    type: 'temperature_moisture',\n    description: '',\n    balesMonitored: 1,\n    optimalRanges: {\n      temperature: { min: 0, max: 30 },\n      moisture: { min: 12, max: 18 }\n    }\n  });\n\n  // Load sensors on mount\n  useEffect(() => {\n    loadSensors();\n    \n    // Listen for sensor updates\n    const handleSensorsUpdate = () => {\n      loadSensors();\n    };\n    \n    window.addEventListener('sensorsUpdated', handleSensorsUpdate);\n    \n    return () => {\n      window.removeEventListener('sensorsUpdated', handleSensorsUpdate);\n    };\n  }, []);\n\n  const loadSensors = () => {\n    try {\n      const sensorsData = dataGenService.getAllSensorsWithCurrentData();\n      setSensors(sensorsData);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error loading sensors:', error);\n      showNotification('Error loading sensors', 'error');\n      setLoading(false);\n    }\n  };\n\n  const showNotification = (message, type = 'success') => {\n    setNotification({ message, type });\n    setTimeout(() => setNotification(null), 4000);\n  };\n\n  const handleAddSensor = () => {\n    setFormData({\n      name: '',\n      location: '',\n      type: 'temperature_moisture',\n      description: '',\n      balesMonitored: 1,\n      optimalRanges: {\n        temperature: { min: 0, max: 30 },\n        moisture: { min: 12, max: 18 }\n      }\n    });\n    setShowAddModal(true);\n  };\n\n  const handleViewDetails = (sensor) => {\n    navigate(`/sensors/${sensor.id}`);\n  };\n\n  const handleSubmitAdd = async (e) => {\n    e.preventDefault();\n    \n    try {\n      const newSensor = dataGenService.addSensor(formData);\n      loadSensors();\n      setShowAddModal(false);\n      showNotification(`Sensor created with ID: ${newSensor.id}. Please pair it with a physical sensor.`, 'success');\n    } catch (error) {\n      showNotification('Error adding sensor: ' + error.message, 'error');\n    }\n  };\n\n  const handlePairSensor = (sensor) => {\n    setSelectedSensor(sensor);\n    setQrCode('');\n    setShowPairModal(true);\n  };\n\n  const handleSubmitPair = (e) => {\n    e.preventDefault();\n    \n    if (!qrCode.trim()) {\n      showNotification('Please enter a QR code', 'error');\n      return;\n    }\n\n    try {\n      const pairedSensor = dataGenService.pairSensor(selectedSensor.id, qrCode);\n      loadSensors();\n      setShowPairModal(false);\n      setSelectedSensor(null);\n      setQrCode('');\n      showNotification(`Sensor successfully paired! New ID: ${pairedSensor.id}`, 'success');\n    } catch (error) {\n      showNotification('Error pairing sensor: ' + error.message, 'error');\n    }\n  };\n\n  const handleDeleteSensor = async (sensorId) => {\n    if (window.confirm('Are you sure you want to delete this sensor?')) {\n      try {\n        dataGenService.deleteSensor(sensorId);\n        loadSensors();\n        showNotification('Sensor deleted successfully!', 'success');\n      } catch (error) {\n        showNotification('Error deleting sensor', 'error');\n      }\n    }\n  };\n\n  const getStatusBadgeClass = (status) => {\n    const statusClasses = {\n      online: 'status-badge online',\n      offline: 'status-badge offline',\n      warning: 'status-badge warning',\n      unpaired: 'status-badge unpaired'\n    };\n    return statusClasses[status] || 'status-badge';\n  };\n\n  const getStatusIcon = (status) => {\n    switch(status) {\n      case 'online':\n        return <Wifi size={14} />;\n      case 'offline':\n        return <WifiOff size={14} />;\n      case 'unpaired':\n        return <AlertTriangle size={14} />;\n      default:\n        return null;\n    }\n  };\n\n  const getBatteryClass = (level) => {\n    if (level > 50) return 'battery-high';\n    if (level > 20) return 'battery-medium';\n    return 'battery-low';\n  };\n\n  const formatLastUpdate = (timestamp) => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffInHours = Math.floor((now - date) / (1000 * 60 * 60));\n    \n    if (diffInHours < 1) {\n      const diffInMinutes = Math.floor((now - date) / (1000 * 60));\n      return `${diffInMinutes}m ago`;\n    } else if (diffInHours < 24) {\n      return `${diffInHours}h ago`;\n    } else {\n      const diffInDays = Math.floor(diffInHours / 24);\n      return `${diffInDays}d ago`;\n    }\n  };\n\n  // Filter sensors\n  const filteredSensors = sensors.filter(sensor => {\n    const statusMatch = filterStatus === 'all' || sensor.status === filterStatus;\n    const typeMatch = filterType === 'all' || sensor.type === filterType;\n    const locationMatch = filterLocation === 'all' || (sensor.location && sensor.location.includes(filterLocation));\n    const searchMatch = searchTerm === '' || \n      (sensor.name && sensor.name.toLowerCase().includes(searchTerm.toLowerCase())) ||\n      (sensor.location && sensor.location.toLowerCase().includes(searchTerm.toLowerCase())) ||\n      (sensor.id && sensor.id.toLowerCase().includes(searchTerm.toLowerCase()));\n    \n    return statusMatch && typeMatch && locationMatch && searchMatch;\n  });\n\n  const uniqueLocations = [...new Set(sensors.map(sensor => sensor.location ? sensor.location.split(' - ')[0] : 'Unknown'))];\n\n  if (loading) {\n    return (\n      <div className=\"sensors\">\n        <div className=\"sensors-loading\">Loading sensors...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"sensors page-container\">\n      {/* Notification */}\n      {notification && (\n        <div className={`notification notification-${notification.type}`}>\n          <span>{notification.message}</span>\n          <button \n            className=\"notification-close\"\n            onClick={() => setNotification(null)}\n          >\n            ×\n          </button>\n        </div>\n      )}\n\n      {/* Compact Filters */}\n      <div className=\"sensors-controls card\">\n        <div className=\"controls-main\">\n          <input\n            type=\"text\"\n            placeholder=\"Search sensors by name, location, or ID...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"search-input\"\n          />\n          \n          <select \n            value={filterLocation} \n            onChange={(e) => setFilterLocation(e.target.value)}\n            className=\"filter-select\"\n          >\n            <option value=\"all\">All Locations</option>\n            {uniqueLocations.map(location => (\n              <option key={location} value={location}>{location}</option>\n            ))}\n          </select>\n          \n          <select \n            value={filterType} \n            onChange={(e) => setFilterType(e.target.value)}\n            className=\"filter-select\"\n          >\n            <option value=\"all\">All Types</option>\n            <option value=\"temperature_moisture\">Temp & Moisture</option>\n            <option value=\"temperature\">Temperature</option>\n            <option value=\"moisture\">Moisture</option>\n          </select>\n          \n          <select \n            value={filterStatus} \n            onChange={(e) => setFilterStatus(e.target.value)}\n            className=\"filter-select\"\n          >\n            <option value=\"all\">All Status</option>\n            <option value=\"online\">Online</option>\n            <option value=\"offline\">Offline</option>\n            <option value=\"unpaired\">Unpaired</option>\n            <option value=\"warning\">Warning</option>\n          </select>\n          \n          <button \n            className=\"btn btn-primary\"\n            onClick={handleAddSensor}\n          >\n            + Add Sensor\n          </button>\n\n          {/* Test button - Remove in production */}\n          <button \n            className=\"btn btn-secondary\"\n            onClick={() => {\n              dataGenService.generateAllReadings();\n              loadSensors();\n              showNotification('Generated new readings for paired sensors!', 'info');\n            }}\n            style={{ marginLeft: '8px' }}\n          >\n            🔄 Generate Data\n          </button>\n        </div>\n      </div>\n\n      {/* Sensors Grid */}\n      <div className=\"sensors-content\">\n        <div className=\"sensors-grid\">\n          {filteredSensors.length === 0 ? (\n            <div className=\"no-sensors\">\n              <p>No sensors found</p>\n              <p style={{ fontSize: '14px', marginTop: '8px', color: '#6b7280' }}>\n                {sensors.length === 0 ? 'Add sensors to start monitoring' : 'Try adjusting your filters'}\n              </p>\n            </div>\n          ) : (\n            filteredSensors.map(sensor => (\n              <div key={sensor.id} className={`sensor-card ${sensor.status === 'unpaired' ? 'sensor-unpaired' : ''}`}>\n                <div className=\"sensor-header\">\n                  <div className=\"sensor-title\">\n                    <h4>{sensor.name || 'Unnamed Sensor'}</h4>\n                    <span className=\"sensor-id\">{sensor.id}</span>\n                  </div>\n                  <span className={getStatusBadgeClass(sensor.status)}>\n                    {getStatusIcon(sensor.status)}\n                    {sensor.status ? sensor.status.toUpperCase() : 'UNKNOWN'}\n                  </span>\n                </div>\n                \n                <div className=\"sensor-location\">\n                  📍 {sensor.location || 'Unknown location'}\n                </div>\n\n                <div className=\"sensor-bales\">\n                  📦 Monitoring {sensor.balesMonitored || 0} bales\n                </div>\n                \n                {sensor.status === 'unpaired' ? (\n                  <div className=\"unpaired-notice\">\n                    <QrCode size={48} style={{ color: '#f59e0b' }} />\n                    <p>This sensor needs to be paired with a physical device</p>\n                    <button \n                      className=\"btn btn-primary btn-sm\"\n                      onClick={() => handlePairSensor(sensor)}\n                    >\n                      <QrCode size={16} />\n                      Pair Sensor\n                    </button>\n                  </div>\n                ) : (\n                  <>\n                    <div className=\"sensor-readings\">\n                      {sensor.currentTemperature !== null && sensor.currentTemperature !== undefined && (\n                        <div className=\"reading\">\n                          <span className=\"reading-label\">Temperature</span>\n                          <span className=\"reading-value\">{sensor.currentTemperature.toFixed(1)}°C</span>\n                        </div>\n                      )}\n                      {sensor.currentMoisture !== null && sensor.currentMoisture !== undefined && (\n                        <div className=\"reading\">\n                          <span className=\"reading-label\">Moisture</span>\n                          <span className=\"reading-value\">{sensor.currentMoisture.toFixed(1)}%</span>\n                        </div>\n                      )}\n                    </div>\n                    \n                    <div className=\"sensor-meta\">\n                      <div className=\"battery-info\">\n                        <span className={`battery-indicator ${getBatteryClass(sensor.batteryLevel || 0)}`}>\n                          {sensor.isCharging ? '⚡' : '🔋'} {sensor.batteryLevel || 0}%\n                          {sensor.isCharging && <span style={{ fontSize: '10px', marginLeft: '4px' }}>(Charging)</span>}\n                        </span>\n                      </div>\n                      <div className=\"last-update\">\n                        Updated: {formatLastUpdate(sensor.lastUpdate || new Date())}\n                      </div>\n                    </div>\n                  </>\n                )}\n                \n                <div className=\"sensor-actions\">\n                  {sensor.status !== 'unpaired' && (\n                    <button \n                      className=\"btn btn-primary btn-sm\"\n                      onClick={() => handleViewDetails(sensor)}\n                    >\n                      View Details\n                    </button>\n                  )}\n                  <button \n                    className=\"btn btn-danger btn-sm\"\n                    onClick={() => handleDeleteSensor(sensor.id)}\n                  >\n                    Delete\n                  </button>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n\n      {/* Add Sensor Modal */}\n      {showAddModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowAddModal(false)}>\n          <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h3>\n                <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                  <path d=\"M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\"/>\n                </svg>\n                Add New Sensor\n              </h3>\n              <button \n                className=\"modal-close\"\n                onClick={() => setShowAddModal(false)}\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"modal-body\">\n              <form onSubmit={handleSubmitAdd} className=\"modal-form\">\n                {/* Basic Information */}\n                <div className=\"form-row\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"add-name\" className=\"form-label-required\">Sensor Name</label>\n                    <input\n                      type=\"text\"\n                      id=\"add-name\"\n                      value={formData.name}\n                      onChange={(e) => setFormData({...formData, name: e.target.value})}\n                      placeholder=\"Barn A Temperature\"\n                      required\n                      className=\"form-input\"\n                    />\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label htmlFor=\"add-type\" className=\"form-label-required\">Sensor Type</label>\n                    <select\n                      id=\"add-type\"\n                      value={formData.type}\n                      onChange={(e) => setFormData({...formData, type: e.target.value})}\n                      required\n                      className=\"form-input\"\n                    >\n                      <option value=\"temperature_moisture\">Temperature & Moisture</option>\n                      <option value=\"temperature\">Temperature Only</option>\n                      <option value=\"moisture\">Moisture Only</option>\n                    </select>\n                  </div>\n                </div>\n\n                {/* Location & Bales */}\n                <div className=\"form-row\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"add-location\" className=\"form-label-required\">Location</label>\n                    <input\n                      type=\"text\"\n                      id=\"add-location\"\n                      value={formData.location}\n                      onChange={(e) => setFormData({...formData, location: e.target.value})}\n                      placeholder=\"Barn A - Section 2\"\n                      required\n                      className=\"form-input\"\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"add-bales\" className=\"form-label-required\">Bales Monitored</label>\n                    <input\n                      type=\"number\"\n                      id=\"add-bales\"\n                      value={formData.balesMonitored}\n                      onChange={(e) => setFormData({...formData, balesMonitored: parseInt(e.target.value) || 1})}\n                      placeholder=\"50\"\n                      min=\"1\"\n                      max=\"1000\"\n                      required\n                      className=\"form-input\"\n                    />\n                    <span className=\"form-help\">Number of hay bales</span>\n                  </div>\n                </div>\n\n                {/* Optimal Ranges */}\n                <div className=\"form-section\">\n                  <h4>Optimal Ranges</h4>\n                  \n                  {(formData.type === 'temperature' || formData.type === 'temperature_moisture') && (\n                    <div className=\"form-row\">\n                      <div className=\"form-group\">\n                        <label htmlFor=\"add-temp-min\">Min Temperature (°C)</label>\n                        <input\n                          type=\"number\"\n                          id=\"add-temp-min\"\n                          value={formData.optimalRanges.temperature.min}\n                          onChange={(e) => setFormData({\n                            ...formData,\n                            optimalRanges: {\n                              ...formData.optimalRanges,\n                              temperature: {\n                                ...formData.optimalRanges.temperature,\n                                min: parseFloat(e.target.value) || 0\n                              }\n                            }\n                          })}\n                          placeholder=\"0\"\n                          className=\"form-input\"\n                          step=\"0.1\"\n                        />\n                      </div>\n                      \n                      <div className=\"form-group\">\n                        <label htmlFor=\"add-temp-max\">Max Temperature (°C)</label>\n                        <input\n                          type=\"number\"\n                          id=\"add-temp-max\"\n                          value={formData.optimalRanges.temperature.max}\n                          onChange={(e) => setFormData({\n                            ...formData,\n                            optimalRanges: {\n                              ...formData.optimalRanges,\n                              temperature: {\n                                ...formData.optimalRanges.temperature,\n                                max: parseFloat(e.target.value) || 0\n                              }\n                            }\n                          })}\n                          placeholder=\"30\"\n                          className=\"form-input\"\n                          step=\"0.1\"\n                        />\n                      </div>\n                    </div>\n                  )}\n\n                  {(formData.type === 'moisture' || formData.type === 'temperature_moisture') && (\n                    <div className=\"form-row\">\n                      <div className=\"form-group\">\n                        <label htmlFor=\"add-moisture-min\">Min Moisture (%)</label>\n                        <input\n                          type=\"number\"\n                          id=\"add-moisture-min\"\n                          value={formData.optimalRanges.moisture.min}\n                          onChange={(e) => setFormData({\n                            ...formData,\n                            optimalRanges: {\n                              ...formData.optimalRanges,\n                              moisture: {\n                                ...formData.optimalRanges.moisture,\n                                min: parseFloat(e.target.value) || 0\n                              }\n                            }\n                          })}\n                          placeholder=\"12\"\n                          className=\"form-input\"\n                          step=\"0.1\"\n                        />\n                      </div>\n                      \n                      <div className=\"form-group\">\n                        <label htmlFor=\"add-moisture-max\">Max Moisture (%)</label>\n                        <input\n                          type=\"number\"\n                          id=\"add-moisture-max\"\n                          value={formData.optimalRanges.moisture.max}\n                          onChange={(e) => setFormData({\n                            ...formData,\n                            optimalRanges: {\n                              ...formData.optimalRanges,\n                              moisture: {\n                                ...formData.optimalRanges.moisture,\n                                max: parseFloat(e.target.value) || 0\n                              }\n                            }\n                          })}\n                          placeholder=\"18\"\n                          className=\"form-input\"\n                          step=\"0.1\"\n                        />\n                      </div>\n                    </div>\n                  )}\n                </div>\n\n                {/* Description (Optional) */}\n                <div className=\"form-row full-width\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"add-description\">Description (Optional)</label>\n                    <textarea\n                      id=\"add-description\"\n                      value={formData.description}\n                      onChange={(e) => setFormData({...formData, description: e.target.value})}\n                      placeholder=\"Additional notes about this sensor...\"\n                      className=\"form-input\"\n                      rows=\"2\"\n                    />\n                  </div>\n                </div>\n\n                {/* Info Notice */}\n                <div className=\"info-notice\">\n                  <AlertTriangle size={16} />\n                  <span>Sensor will be in \"Unpaired\" status until physically paired with the device.</span>\n                </div>\n              </form>\n            </div>\n\n            <div className=\"modal-actions\">\n              <button \n                type=\"button\" \n                className=\"btn btn-secondary\"\n                onClick={() => setShowAddModal(false)}\n              >\n                Cancel\n              </button>\n              <button \n                type=\"submit\" \n                className=\"btn btn-primary\"\n                onClick={handleSubmitAdd}\n              >\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                  <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\n                  <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n                </svg>\n                Create Sensor\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Pair Sensor Modal */}\n      {showPairModal && selectedSensor && (\n        <div className=\"modal-overlay\" onClick={() => setShowPairModal(false)}>\n          <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h3>\n                <QrCode size={18} />\n                Pair Sensor\n              </h3>\n              <button \n                className=\"modal-close\"\n                onClick={() => setShowPairModal(false)}\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"modal-body\">\n              <form onSubmit={handleSubmitPair} className=\"modal-form\">\n                <div className=\"pair-info\">\n                  <div className=\"pair-sensor-details\">\n                    <h4>{selectedSensor.name}</h4>\n                    <p>Current ID: {selectedSensor.id}</p>\n                    <p>Location: {selectedSensor.location}</p>\n                  </div>\n                  \n                  <div className=\"qr-placeholder\">\n                    <QrCode size={80} style={{ color: '#F4C430' }} />\n                    <p>Scan the QR code on your physical sensor</p>\n                  </div>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"qr-code\" className=\"form-label-required\">Enter QR Code</label>\n                  <input\n                    type=\"text\"\n                    id=\"qr-code\"\n                    value={qrCode}\n                    onChange={(e) => setQrCode(e.target.value)}\n                    placeholder=\"e.g., QR-ABC123XYZ789\"\n                    required\n                    className=\"form-input\"\n                    autoFocus\n                  />\n                  <span className=\"form-help\">Enter the code from the physical sensor's QR label</span>\n                </div>\n\n                <div className=\"info-notice\">\n                  <AlertTriangle size={16} />\n                  <span>Once paired, the sensor will receive a permanent SENS-xxx ID and begin data collection.</span>\n                </div>\n              </form>\n            </div>\n\n            <div className=\"modal-actions\">\n              <button \n                type=\"button\" \n                className=\"btn btn-secondary\"\n                onClick={() => setShowPairModal(false)}\n              >\n                Cancel\n              </button>\n              <button \n                type=\"submit\" \n                className=\"btn btn-primary\"\n                onClick={handleSubmitPair}\n              >\n                <QrCode size={16} />\n                Pair Sensor\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Sensors;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}