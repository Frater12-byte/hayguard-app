{"ast":null,"code":"var _jsxFileName = \"/Users/francescoterragni/Desktop/hayguard-broken-backup/frontend/src/components/Team/Team.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { UserPlus, Key, Edit2, Mail, Clock, Trash2 } from 'lucide-react';\nimport { useUser } from '../../contexts/UserContext';\nimport './Team.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TEAM_STORAGE_KEY = 'hayguard_team_members';\nconst Team = () => {\n  _s();\n  const {\n    user: contextUser\n  } = useUser();\n  const [teamMembers, setTeamMembers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [notification, setNotification] = useState(null);\n  const [showPasswordModal, setShowPasswordModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [selectedMember, setSelectedMember] = useState(null);\n  const [newPassword, setNewPassword] = useState('');\n  const [editForm, setEditForm] = useState({\n    name: '',\n    email: '',\n    role: ''\n  });\n  const [inviteForm, setInviteForm] = useState({\n    email: '',\n    role: 'Worker'\n  });\n\n  // Load team members from localStorage\n  const loadTeamMembers = () => {\n    try {\n      const stored = localStorage.getItem(TEAM_STORAGE_KEY);\n      if (stored) {\n        return JSON.parse(stored);\n      }\n    } catch (error) {\n      console.error('Error loading team members:', error);\n    }\n    return [];\n  };\n\n  // Save team members to localStorage\n  const saveTeamMembers = members => {\n    try {\n      localStorage.setItem(TEAM_STORAGE_KEY, JSON.stringify(members));\n    } catch (error) {\n      console.error('Error saving team members:', error);\n    }\n  };\n\n  // Initialize team members with current user\n  const initializeTeamMembers = currentUser => {\n    let members = loadTeamMembers();\n\n    // Check if current user exists in team\n    const currentUserInTeam = members.find(m => m.email === currentUser.email);\n    if (!currentUserInTeam) {\n      // Add current user as first member\n      const currentUserMember = {\n        id: 1,\n        name: currentUser.name || 'Demo User',\n        email: currentUser.email || 'demo@greenfieldfarm.com',\n        role: currentUser.role || 'admin',\n        status: 'active',\n        joinedDate: currentUser.joinDate || new Date().toISOString().split('T')[0],\n        lastActive: new Date().toISOString(),\n        isCurrentUser: true,\n        profilePicture: currentUser.profilePicture || null,\n        phone: currentUser.phone,\n        department: currentUser.department\n      };\n      members = [currentUserMember, ...members];\n    } else {\n      // Update existing current user data\n      members = members.map(m => {\n        if (m.email === currentUser.email) {\n          return {\n            ...m,\n            name: currentUser.name || m.name,\n            email: currentUser.email,\n            role: currentUser.role || m.role,\n            profilePicture: currentUser.profilePicture || m.profilePicture,\n            phone: currentUser.phone,\n            department: currentUser.department,\n            isCurrentUser: true,\n            lastActive: new Date().toISOString()\n          };\n        }\n        return m;\n      });\n    }\n    saveTeamMembers(members);\n    return members;\n  };\n\n  // Initial load\n  useEffect(() => {\n    if (contextUser) {\n      const members = initializeTeamMembers(contextUser);\n      setTeamMembers(members);\n      setLoading(false);\n    }\n  }, []);\n\n  // Sync when context user changes (profile updates)\n  useEffect(() => {\n    if (contextUser && teamMembers.length > 0) {\n      const updatedMembers = teamMembers.map(member => {\n        if (member.isCurrentUser || member.email === contextUser.email) {\n          return {\n            ...member,\n            name: contextUser.name || member.name,\n            email: contextUser.email,\n            role: contextUser.role || member.role,\n            profilePicture: contextUser.profilePicture,\n            phone: contextUser.phone,\n            department: contextUser.department,\n            isCurrentUser: true,\n            lastActive: new Date().toISOString()\n          };\n        }\n        return member;\n      });\n      setTeamMembers(updatedMembers);\n      saveTeamMembers(updatedMembers);\n    }\n  }, [contextUser === null || contextUser === void 0 ? void 0 : contextUser.profilePicture, contextUser === null || contextUser === void 0 ? void 0 : contextUser.name, contextUser === null || contextUser === void 0 ? void 0 : contextUser.email, contextUser === null || contextUser === void 0 ? void 0 : contextUser.phone]);\n  const showNotification = (message, type = 'success') => {\n    setNotification({\n      message,\n      type\n    });\n    setTimeout(() => setNotification(null), 4000);\n  };\n  const generateRandomPassword = () => {\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%';\n    let password = '';\n    for (let i = 0; i < 12; i++) {\n      password += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    setNewPassword(password);\n  };\n  const handlePasswordReset = async () => {\n    if (!newPassword.trim()) {\n      showNotification('Please generate or enter a password', 'error');\n      return;\n    }\n    try {\n      await new Promise(resolve => setTimeout(resolve, 500));\n      showNotification(`Password updated for ${selectedMember.name}`, 'success');\n      setShowPasswordModal(false);\n      setSelectedMember(null);\n      setNewPassword('');\n    } catch (error) {\n      showNotification('Failed to reset password', 'error');\n    }\n  };\n  const handleEditMember = async e => {\n    e.preventDefault();\n    try {\n      await new Promise(resolve => setTimeout(resolve, 500));\n      const updatedMembers = teamMembers.map(member => member.id === selectedMember.id ? {\n        ...member,\n        ...editForm\n      } : member);\n      setTeamMembers(updatedMembers);\n      saveTeamMembers(updatedMembers);\n      // Dispatch event to notify other components\n      window.dispatchEvent(new Event('teamMembersUpdated'));\n      showNotification('Team member updated successfully!', 'success');\n      setShowEditModal(false);\n      setSelectedMember(null);\n    } catch (error) {\n      showNotification('Failed to update member', 'error');\n    }\n  };\n  const handleDeleteMember = async () => {\n    try {\n      await new Promise(resolve => setTimeout(resolve, 500));\n      const updatedMembers = teamMembers.filter(member => member.id !== selectedMember.id);\n      setTeamMembers(updatedMembers);\n      saveTeamMembers(updatedMembers);\n      // Dispatch event to notify other components\n      window.dispatchEvent(new Event('teamMembersUpdated'));\n      showNotification(`${selectedMember.name} removed from team`, 'success');\n      setShowDeleteModal(false);\n      setSelectedMember(null);\n    } catch (error) {\n      showNotification('Failed to delete member', 'error');\n    }\n  };\n  const handleInviteMember = async e => {\n    e.preventDefault();\n    try {\n      await new Promise(resolve => setTimeout(resolve, 500));\n      const emailName = inviteForm.email.split('@')[0];\n      const newMember = {\n        id: Math.max(0, ...teamMembers.map(m => m.id)) + 1,\n        name: emailName.charAt(0).toUpperCase() + emailName.slice(1),\n        email: inviteForm.email,\n        role: inviteForm.role === 'Farm Owner' ? 'admin' : inviteForm.role === 'Farm Manager' ? 'manager' : 'worker',\n        status: 'active',\n        joinedDate: new Date().toISOString().split('T')[0],\n        lastActive: new Date().toISOString(),\n        isCurrentUser: false,\n        profilePicture: null\n      };\n      const updatedMembers = [...teamMembers, newMember];\n      setTeamMembers(updatedMembers);\n      saveTeamMembers(updatedMembers);\n      // Dispatch event to notify other components\n      window.dispatchEvent(new Event('teamMembersUpdated'));\n      showNotification(`Invitation sent to ${inviteForm.email}!`, 'success');\n      setInviteForm({\n        email: '',\n        role: 'Worker'\n      });\n    } catch (error) {\n      showNotification('Failed to send invitation', 'error');\n    }\n  };\n  const openEditModal = member => {\n    setSelectedMember(member);\n    setEditForm({\n      name: member.name,\n      email: member.email,\n      role: member.role\n    });\n    setShowEditModal(true);\n  };\n  const openDeleteModal = member => {\n    setSelectedMember(member);\n    setShowDeleteModal(true);\n  };\n  const formatLastActive = timestamp => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffInMinutes = Math.floor((now - date) / (1000 * 60));\n    if (diffInMinutes < 5) return 'Just now';\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n    const diffInHours = Math.floor(diffInMinutes / 60);\n    if (diffInHours < 24) return `${diffInHours}h ago`;\n    const diffInDays = Math.floor(diffInHours / 24);\n    if (diffInDays === 1) return 'Yesterday';\n    if (diffInDays < 7) return `${diffInDays}d ago`;\n    return date.toLocaleDateString();\n  };\n  const getRoleBadgeClass = role => {\n    const normalizedRole = role === 'admin' ? 'owner' : role === 'manager' ? 'manager' : 'worker';\n    return `role-badge ${normalizedRole}`;\n  };\n  const getRoleDisplay = role => {\n    switch (role) {\n      case 'admin':\n        return 'Farm Owner';\n      case 'manager':\n        return 'Farm Manager';\n      case 'worker':\n        return 'Worker';\n      default:\n        return role;\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"team-loading\",\n        children: \"Loading team members...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this);\n  }\n  const currentUser = teamMembers.find(m => m.isCurrentUser);\n  const canManageMember = member => {\n    return currentUser && (currentUser.role === 'admin' || currentUser.role === 'manager') && !member.isCurrentUser;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"team-page\",\n    children: [notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `notification notification-${notification.type}`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"notification-close\",\n        onClick: () => setNotification(null),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleInviteMember,\n        className: \"controls-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: inviteForm.email,\n          onChange: e => setInviteForm(prev => ({\n            ...prev,\n            email: e.target.value\n          })),\n          className: \"form-input\",\n          placeholder: \"Enter email address\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: inviteForm.role,\n          onChange: e => setInviteForm(prev => ({\n            ...prev,\n            role: e.target.value\n          })),\n          className: \"filter-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Worker\",\n            children: \"Worker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Farm Manager\",\n            children: \"Farm Manager\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Farm Owner\",\n            children: \"Farm Owner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary btn-sm\",\n          children: [/*#__PURE__*/_jsxDEV(UserPlus, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), \"Invite Member\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"team-list-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-cell\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-cell\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-cell\",\n          children: \"Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-cell\",\n          children: \"Joined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-cell\",\n          children: \"Last Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-cell\",\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"team-list-body\",\n        children: teamMembers.map(member => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `team-list-row ${member.isCurrentUser ? 'current-user' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-cell name-cell\",\n            \"data-label\": \"Name\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"member-name-display\",\n              children: [member.profilePicture ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: member.profilePicture,\n                alt: member.name,\n                className: \"member-avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"member-avatar-placeholder\",\n                children: member.name.charAt(0).toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"member-name\",\n                children: member.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, this), member.isCurrentUser && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"you-badge\",\n                children: \"You\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 44\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-cell email-cell\",\n            \"data-label\": \"Email\",\n            children: [/*#__PURE__*/_jsxDEV(Mail, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this), member.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-cell role-cell\",\n            \"data-label\": \"Role\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: getRoleBadgeClass(member.role),\n              children: getRoleDisplay(member.role)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-cell joined-cell\",\n            \"data-label\": \"Joined\",\n            children: new Date(member.joinedDate).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-cell activity-cell\",\n            \"data-label\": \"Last Active\",\n            children: [/*#__PURE__*/_jsxDEV(Clock, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 17\n            }, this), formatLastActive(member.lastActive)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-cell actions-cell\",\n            children: canManageMember(member) ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"action-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-icon\",\n                onClick: () => openEditModal(member),\n                title: \"Edit\",\n                children: /*#__PURE__*/_jsxDEV(Edit2, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-icon\",\n                onClick: () => {\n                  setSelectedMember(member);\n                  setShowPasswordModal(true);\n                },\n                title: \"Reset Password\",\n                children: /*#__PURE__*/_jsxDEV(Key, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-icon btn-icon-danger\",\n                onClick: () => openDeleteModal(member),\n                title: \"Delete\",\n                children: /*#__PURE__*/_jsxDEV(Trash2, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"no-actions\",\n              children: \"\\u2014\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this)]\n        }, member.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), showPasswordModal && selectedMember && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowPasswordModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setShowPasswordModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"member-info-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: selectedMember.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this), \" (\", selectedMember.email, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"password-input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newPassword,\n                onChange: e => setNewPassword(e.target.value),\n                className: \"form-input\",\n                placeholder: \"Enter new password or generate one\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-secondary btn-sm\",\n                onClick: generateRandomPassword,\n                children: \"Generate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"form-help\",\n            children: \"Please provide the new password to the user securely.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: () => setShowPasswordModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: handlePasswordReset,\n            children: \"Update Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 9\n    }, this), showEditModal && selectedMember && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowEditModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Edit Team Member\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setShowEditModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleEditMember,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editForm.name,\n                onChange: e => setEditForm(prev => ({\n                  ...prev,\n                  name: e.target.value\n                })),\n                className: \"form-input\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                value: editForm.email,\n                onChange: e => setEditForm(prev => ({\n                  ...prev,\n                  email: e.target.value\n                })),\n                className: \"form-input\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: editForm.role,\n                onChange: e => setEditForm(prev => ({\n                  ...prev,\n                  role: e.target.value\n                })),\n                className: \"form-input\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"worker\",\n                  children: \"Worker\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"manager\",\n                  children: \"Farm Manager\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"admin\",\n                  children: \"Farm Owner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              onClick: () => setShowEditModal(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 9\n    }, this), showDeleteModal && selectedMember && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowDeleteModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Confirm Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setShowDeleteModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Are you sure you want to remove \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: selectedMember.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 50\n            }, this), \" from the team?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"form-help\",\n            children: \"This action cannot be undone.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: () => setShowDeleteModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: handleDeleteMember,\n            children: \"Delete Member\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 5\n  }, this);\n};\n_s(Team, \"nPTbVRWE6EFkNw8kibNIltNL4PA=\", false, function () {\n  return [useUser];\n});\n_c = Team;\nexport default Team;\nvar _c;\n$RefreshReg$(_c, \"Team\");","map":{"version":3,"names":["React","useState","useEffect","UserPlus","Key","Edit2","Mail","Clock","Trash2","useUser","jsxDEV","_jsxDEV","TEAM_STORAGE_KEY","Team","_s","user","contextUser","teamMembers","setTeamMembers","loading","setLoading","notification","setNotification","showPasswordModal","setShowPasswordModal","showEditModal","setShowEditModal","showDeleteModal","setShowDeleteModal","selectedMember","setSelectedMember","newPassword","setNewPassword","editForm","setEditForm","name","email","role","inviteForm","setInviteForm","loadTeamMembers","stored","localStorage","getItem","JSON","parse","error","console","saveTeamMembers","members","setItem","stringify","initializeTeamMembers","currentUser","currentUserInTeam","find","m","currentUserMember","id","status","joinedDate","joinDate","Date","toISOString","split","lastActive","isCurrentUser","profilePicture","phone","department","map","length","updatedMembers","member","showNotification","message","type","setTimeout","generateRandomPassword","chars","password","i","charAt","Math","floor","random","handlePasswordReset","trim","Promise","resolve","handleEditMember","e","preventDefault","window","dispatchEvent","Event","handleDeleteMember","filter","handleInviteMember","emailName","newMember","max","toUpperCase","slice","openEditModal","openDeleteModal","formatLastActive","timestamp","date","now","diffInMinutes","diffInHours","diffInDays","toLocaleDateString","getRoleBadgeClass","normalizedRole","getRoleDisplay","className","children","fileName","_jsxFileName","lineNumber","columnNumber","canManageMember","onClick","onSubmit","value","onChange","prev","target","placeholder","required","size","src","alt","title","stopPropagation","_c","$RefreshReg$"],"sources":["/Users/francescoterragni/Desktop/hayguard-broken-backup/frontend/src/components/Team/Team.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { UserPlus, Key, Edit2, Mail, Clock, Trash2 } from 'lucide-react';\nimport { useUser } from '../../contexts/UserContext';\nimport './Team.css';\n\nconst TEAM_STORAGE_KEY = 'hayguard_team_members';\n\nconst Team = () => {\n  const { user: contextUser } = useUser();\n  const [teamMembers, setTeamMembers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [notification, setNotification] = useState(null);\n  const [showPasswordModal, setShowPasswordModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [selectedMember, setSelectedMember] = useState(null);\n  const [newPassword, setNewPassword] = useState('');\n  const [editForm, setEditForm] = useState({\n    name: '',\n    email: '',\n    role: ''\n  });\n  const [inviteForm, setInviteForm] = useState({\n    email: '',\n    role: 'Worker'\n  });\n\n  // Load team members from localStorage\n  const loadTeamMembers = () => {\n    try {\n      const stored = localStorage.getItem(TEAM_STORAGE_KEY);\n      if (stored) {\n        return JSON.parse(stored);\n      }\n    } catch (error) {\n      console.error('Error loading team members:', error);\n    }\n    return [];\n  };\n\n  // Save team members to localStorage\n  const saveTeamMembers = (members) => {\n    try {\n      localStorage.setItem(TEAM_STORAGE_KEY, JSON.stringify(members));\n    } catch (error) {\n      console.error('Error saving team members:', error);\n    }\n  };\n\n  // Initialize team members with current user\n  const initializeTeamMembers = (currentUser) => {\n    let members = loadTeamMembers();\n    \n    // Check if current user exists in team\n    const currentUserInTeam = members.find(m => m.email === currentUser.email);\n    \n    if (!currentUserInTeam) {\n      // Add current user as first member\n      const currentUserMember = {\n        id: 1,\n        name: currentUser.name || 'Demo User',\n        email: currentUser.email || 'demo@greenfieldfarm.com',\n        role: currentUser.role || 'admin',\n        status: 'active',\n        joinedDate: currentUser.joinDate || new Date().toISOString().split('T')[0],\n        lastActive: new Date().toISOString(),\n        isCurrentUser: true,\n        profilePicture: currentUser.profilePicture || null,\n        phone: currentUser.phone,\n        department: currentUser.department\n      };\n      \n      members = [currentUserMember, ...members];\n    } else {\n      // Update existing current user data\n      members = members.map(m => {\n        if (m.email === currentUser.email) {\n          return {\n            ...m,\n            name: currentUser.name || m.name,\n            email: currentUser.email,\n            role: currentUser.role || m.role,\n            profilePicture: currentUser.profilePicture || m.profilePicture,\n            phone: currentUser.phone,\n            department: currentUser.department,\n            isCurrentUser: true,\n            lastActive: new Date().toISOString()\n          };\n        }\n        return m;\n      });\n    }\n    \n    saveTeamMembers(members);\n    return members;\n  };\n\n  // Initial load\n  useEffect(() => {\n    if (contextUser) {\n      const members = initializeTeamMembers(contextUser);\n      setTeamMembers(members);\n      setLoading(false);\n    }\n  }, []);\n\n  // Sync when context user changes (profile updates)\n  useEffect(() => {\n    if (contextUser && teamMembers.length > 0) {\n      const updatedMembers = teamMembers.map(member => {\n        if (member.isCurrentUser || member.email === contextUser.email) {\n          return {\n            ...member,\n            name: contextUser.name || member.name,\n            email: contextUser.email,\n            role: contextUser.role || member.role,\n            profilePicture: contextUser.profilePicture,\n            phone: contextUser.phone,\n            department: contextUser.department,\n            isCurrentUser: true,\n            lastActive: new Date().toISOString()\n          };\n        }\n        return member;\n      });\n      \n      setTeamMembers(updatedMembers);\n      saveTeamMembers(updatedMembers);\n    }\n  }, [contextUser?.profilePicture, contextUser?.name, contextUser?.email, contextUser?.phone]);\n\n  const showNotification = (message, type = 'success') => {\n    setNotification({ message, type });\n    setTimeout(() => setNotification(null), 4000);\n  };\n\n  const generateRandomPassword = () => {\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%';\n    let password = '';\n    for (let i = 0; i < 12; i++) {\n      password += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    setNewPassword(password);\n  };\n\n  const handlePasswordReset = async () => {\n    if (!newPassword.trim()) {\n      showNotification('Please generate or enter a password', 'error');\n      return;\n    }\n\n    try {\n      await new Promise(resolve => setTimeout(resolve, 500));\n      showNotification(`Password updated for ${selectedMember.name}`, 'success');\n      setShowPasswordModal(false);\n      setSelectedMember(null);\n      setNewPassword('');\n    } catch (error) {\n      showNotification('Failed to reset password', 'error');\n    }\n  };\n\n  const handleEditMember = async (e) => {\n    e.preventDefault();\n    try {\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      const updatedMembers = teamMembers.map(member => \n        member.id === selectedMember.id \n          ? { ...member, ...editForm }\n          : member\n      );\n      \n      setTeamMembers(updatedMembers);\n      saveTeamMembers(updatedMembers);\n      // Dispatch event to notify other components\n      window.dispatchEvent(new Event('teamMembersUpdated'));\n      \n      showNotification('Team member updated successfully!', 'success');\n      setShowEditModal(false);\n      setSelectedMember(null);\n    } catch (error) {\n      showNotification('Failed to update member', 'error');\n    }\n  };\n\n  const handleDeleteMember = async () => {\n    try {\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      const updatedMembers = teamMembers.filter(member => member.id !== selectedMember.id);\n      \n      setTeamMembers(updatedMembers);\n      saveTeamMembers(updatedMembers);\n      // Dispatch event to notify other components\n      window.dispatchEvent(new Event('teamMembersUpdated'));\n      \n      showNotification(`${selectedMember.name} removed from team`, 'success');\n      setShowDeleteModal(false);\n      setSelectedMember(null);\n    } catch (error) {\n      showNotification('Failed to delete member', 'error');\n    }\n  };\n\n  const handleInviteMember = async (e) => {\n    e.preventDefault();\n    try {\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      const emailName = inviteForm.email.split('@')[0];\n      const newMember = {\n        id: Math.max(0, ...teamMembers.map(m => m.id)) + 1,\n        name: emailName.charAt(0).toUpperCase() + emailName.slice(1),\n        email: inviteForm.email,\n        role: inviteForm.role === 'Farm Owner' ? 'admin' : \n              inviteForm.role === 'Farm Manager' ? 'manager' : 'worker',\n        status: 'active',\n        joinedDate: new Date().toISOString().split('T')[0],\n        lastActive: new Date().toISOString(),\n        isCurrentUser: false,\n        profilePicture: null\n      };\n      \n      const updatedMembers = [...teamMembers, newMember];\n      setTeamMembers(updatedMembers);\n      saveTeamMembers(updatedMembers);\n      // Dispatch event to notify other components\n      window.dispatchEvent(new Event('teamMembersUpdated'));\n      \n      showNotification(`Invitation sent to ${inviteForm.email}!`, 'success');\n      setInviteForm({ email: '', role: 'Worker' });\n    } catch (error) {\n      showNotification('Failed to send invitation', 'error');\n    }\n  };\n\n  const openEditModal = (member) => {\n    setSelectedMember(member);\n    setEditForm({\n      name: member.name,\n      email: member.email,\n      role: member.role\n    });\n    setShowEditModal(true);\n  };\n\n  const openDeleteModal = (member) => {\n    setSelectedMember(member);\n    setShowDeleteModal(true);\n  };\n\n  const formatLastActive = (timestamp) => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffInMinutes = Math.floor((now - date) / (1000 * 60));\n    \n    if (diffInMinutes < 5) return 'Just now';\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n    \n    const diffInHours = Math.floor(diffInMinutes / 60);\n    if (diffInHours < 24) return `${diffInHours}h ago`;\n    \n    const diffInDays = Math.floor(diffInHours / 24);\n    if (diffInDays === 1) return 'Yesterday';\n    if (diffInDays < 7) return `${diffInDays}d ago`;\n    \n    return date.toLocaleDateString();\n  };\n\n  const getRoleBadgeClass = (role) => {\n    const normalizedRole = role === 'admin' ? 'owner' : \n                           role === 'manager' ? 'manager' : 'worker';\n    return `role-badge ${normalizedRole}`;\n  };\n\n  const getRoleDisplay = (role) => {\n    switch (role) {\n      case 'admin': return 'Farm Owner';\n      case 'manager': return 'Farm Manager';\n      case 'worker': return 'Worker';\n      default: return role;\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"team-page\">\n        <div className=\"team-loading\">Loading team members...</div>\n      </div>\n    );\n  }\n\n  const currentUser = teamMembers.find(m => m.isCurrentUser);\n  \n  const canManageMember = (member) => {\n    return currentUser && \n      (currentUser.role === 'admin' || currentUser.role === 'manager') &&\n      !member.isCurrentUser;\n  };\n\n  return (\n    <div className=\"team-page\">\n      {notification && (\n        <div className={`notification notification-${notification.type}`}>\n          <span>{notification.message}</span>\n          <button \n            className=\"notification-close\"\n            onClick={() => setNotification(null)}\n          >\n            ×\n          </button>\n        </div>\n      )}\n\n      <div className=\"team-controls\">\n        <form onSubmit={handleInviteMember} className=\"controls-main\">\n          <input\n            type=\"email\"\n            value={inviteForm.email}\n            onChange={(e) => setInviteForm(prev => ({...prev, email: e.target.value}))}\n            className=\"form-input\"\n            placeholder=\"Enter email address\"\n            required\n          />\n          <select\n            value={inviteForm.role}\n            onChange={(e) => setInviteForm(prev => ({...prev, role: e.target.value}))}\n            className=\"filter-select\"\n          >\n            <option value=\"Worker\">Worker</option>\n            <option value=\"Farm Manager\">Farm Manager</option>\n            <option value=\"Farm Owner\">Farm Owner</option>\n          </select>\n          <button type=\"submit\" className=\"btn btn-primary btn-sm\">\n            <UserPlus size={16} />\n            Invite Member\n          </button>\n        </form>\n      </div>\n\n      <div className=\"team-list\">\n        <div className=\"team-list-header\">\n          <div className=\"header-cell\">Name</div>\n          <div className=\"header-cell\">Email</div>\n          <div className=\"header-cell\">Role</div>\n          <div className=\"header-cell\">Joined</div>\n          <div className=\"header-cell\">Last Active</div>\n          <div className=\"header-cell\">Actions</div>\n        </div>\n\n        <div className=\"team-list-body\">\n          {teamMembers.map(member => (\n            <div \n              key={member.id} \n              className={`team-list-row ${member.isCurrentUser ? 'current-user' : ''}`}\n            >\n              <div className=\"list-cell name-cell\" data-label=\"Name\">\n                <div className=\"member-name-display\">\n                  {member.profilePicture ? (\n                    <img \n                      src={member.profilePicture} \n                      alt={member.name}\n                      className=\"member-avatar\"\n                    />\n                  ) : (\n                    <div className=\"member-avatar-placeholder\">\n                      {member.name.charAt(0).toUpperCase()}\n                    </div>\n                  )}\n                  <span className=\"member-name\">{member.name}</span>\n                  {member.isCurrentUser && <span className=\"you-badge\">You</span>}\n                </div>\n              </div>\n              <div className=\"list-cell email-cell\" data-label=\"Email\">\n                <Mail size={14} />\n                {member.email}\n              </div>\n              <div className=\"list-cell role-cell\" data-label=\"Role\">\n                <span className={getRoleBadgeClass(member.role)}>\n                  {getRoleDisplay(member.role)}\n                </span>\n              </div>\n              <div className=\"list-cell joined-cell\" data-label=\"Joined\">\n                {new Date(member.joinedDate).toLocaleDateString()}\n              </div>\n              <div className=\"list-cell activity-cell\" data-label=\"Last Active\">\n                <Clock size={14} />\n                {formatLastActive(member.lastActive)}\n              </div>\n              <div className=\"list-cell actions-cell\">\n                {canManageMember(member) ? (\n                  <div className=\"action-buttons\">\n                    <button \n                      className=\"btn-icon\"\n                      onClick={() => openEditModal(member)}\n                      title=\"Edit\"\n                    >\n                      <Edit2 size={16} />\n                    </button>\n                    <button \n                      className=\"btn-icon\"\n                      onClick={() => {\n                        setSelectedMember(member);\n                        setShowPasswordModal(true);\n                      }}\n                      title=\"Reset Password\"\n                    >\n                      <Key size={16} />\n                    </button>\n                    <button \n                      className=\"btn-icon btn-icon-danger\"\n                      onClick={() => openDeleteModal(member)}\n                      title=\"Delete\"\n                    >\n                      <Trash2 size={16} />\n                    </button>\n                  </div>\n                ) : (\n                  <span className=\"no-actions\">—</span>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Password Reset Modal */}\n      {showPasswordModal && selectedMember && (\n        <div className=\"modal-overlay\" onClick={() => setShowPasswordModal(false)}>\n          <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>Reset Password</h2>\n              <button className=\"modal-close\" onClick={() => setShowPasswordModal(false)}>×</button>\n            </div>\n            <div className=\"modal-body\">\n              <p className=\"member-info-text\">\n                <strong>{selectedMember.name}</strong> ({selectedMember.email})\n              </p>\n              <div className=\"form-group\">\n                <label className=\"form-label\">New Password</label>\n                <div className=\"password-input-group\">\n                  <input\n                    type=\"text\"\n                    value={newPassword}\n                    onChange={(e) => setNewPassword(e.target.value)}\n                    className=\"form-input\"\n                    placeholder=\"Enter new password or generate one\"\n                  />\n                  <button type=\"button\" className=\"btn btn-secondary btn-sm\" onClick={generateRandomPassword}>\n                    Generate\n                  </button>\n                </div>\n              </div>\n              <p className=\"form-help\">Please provide the new password to the user securely.</p>\n            </div>\n            <div className=\"modal-footer\">\n              <button className=\"btn btn-secondary\" onClick={() => setShowPasswordModal(false)}>Cancel</button>\n              <button className=\"btn btn-primary\" onClick={handlePasswordReset}>Update Password</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Edit Member Modal */}\n      {showEditModal && selectedMember && (\n        <div className=\"modal-overlay\" onClick={() => setShowEditModal(false)}>\n          <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>Edit Team Member</h2>\n              <button className=\"modal-close\" onClick={() => setShowEditModal(false)}>×</button>\n            </div>\n            <form onSubmit={handleEditMember}>\n              <div className=\"modal-body\">\n                <div className=\"form-group\">\n                  <label className=\"form-label\">Name</label>\n                  <input\n                    type=\"text\"\n                    value={editForm.name}\n                    onChange={(e) => setEditForm(prev => ({...prev, name: e.target.value}))}\n                    className=\"form-input\"\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label className=\"form-label\">Email</label>\n                  <input\n                    type=\"email\"\n                    value={editForm.email}\n                    onChange={(e) => setEditForm(prev => ({...prev, email: e.target.value}))}\n                    className=\"form-input\"\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label className=\"form-label\">Role</label>\n                  <select\n                    value={editForm.role}\n                    onChange={(e) => setEditForm(prev => ({...prev, role: e.target.value}))}\n                    className=\"form-input\"\n                  >\n                    <option value=\"worker\">Worker</option>\n                    <option value=\"manager\">Farm Manager</option>\n                    <option value=\"admin\">Farm Owner</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setShowEditModal(false)}>Cancel</button>\n                <button type=\"submit\" className=\"btn btn-primary\">Save Changes</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Delete Confirmation Modal */}\n      {showDeleteModal && selectedMember && (\n        <div className=\"modal-overlay\" onClick={() => setShowDeleteModal(false)}>\n          <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>Confirm Delete</h2>\n              <button className=\"modal-close\" onClick={() => setShowDeleteModal(false)}>×</button>\n            </div>\n            <div className=\"modal-body\">\n              <p>Are you sure you want to remove <strong>{selectedMember.name}</strong> from the team?</p>\n              <p className=\"form-help\">This action cannot be undone.</p>\n            </div>\n            <div className=\"modal-footer\">\n              <button className=\"btn btn-secondary\" onClick={() => setShowDeleteModal(false)}>Cancel</button>\n              <button className=\"btn btn-danger\" onClick={handleDeleteMember}>Delete Member</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Team;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}