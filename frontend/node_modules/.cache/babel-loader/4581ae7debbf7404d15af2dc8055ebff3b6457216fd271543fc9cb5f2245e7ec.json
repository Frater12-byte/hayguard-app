{"ast":null,"code":"var _jsxFileName = \"/Users/francescoterragni/Desktop/hayguard-broken-backup/frontend/src/contexts/NotificationContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationContext = /*#__PURE__*/createContext();\nexport const useNotification = () => {\n  _s();\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotification must be used within NotificationProvider');\n  }\n  return context;\n};\n_s(useNotification, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const NotificationProvider = ({\n  children\n}) => {\n  _s2();\n  const [notifications, setNotifications] = useState([]);\n  const addNotification = (type, message, duration = 5000) => {\n    const id = Date.now();\n    setNotifications(prev => [...prev, {\n      id,\n      type,\n      message,\n      duration\n    }]);\n  };\n  const removeNotification = id => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  };\n  const showSuccess = (message, duration) => addNotification('success', message, duration);\n  const showError = (message, duration) => addNotification('error', message, duration);\n  const showWarning = (message, duration) => addNotification('warning', message, duration);\n  const showInfo = (message, duration) => addNotification('info', message, duration);\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: {\n      showSuccess,\n      showError,\n      showWarning,\n      showInfo\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s2(NotificationProvider, \"/HH3zTd3BUNOgnlhD79kguSWbWM=\");\n_c = NotificationProvider;\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","NotificationContext","useNotification","_s","context","Error","NotificationProvider","children","_s2","notifications","setNotifications","addNotification","type","message","duration","id","Date","now","prev","removeNotification","filter","notification","showSuccess","showError","showWarning","showInfo","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/francescoterragni/Desktop/hayguard-broken-backup/frontend/src/contexts/NotificationContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst NotificationContext = createContext();\n\nexport const useNotification = () => {\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotification must be used within NotificationProvider');\n  }\n  return context;\n};\n\nexport const NotificationProvider = ({ children }) => {\n  const [notifications, setNotifications] = useState([]);\n\n  const addNotification = (type, message, duration = 5000) => {\n    const id = Date.now();\n    setNotifications(prev => [...prev, { id, type, message, duration }]);\n  };\n\n  const removeNotification = (id) => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  };\n\n  const showSuccess = (message, duration) => addNotification('success', message, duration);\n  const showError = (message, duration) => addNotification('error', message, duration);\n  const showWarning = (message, duration) => addNotification('warning', message, duration);\n  const showInfo = (message, duration) => addNotification('info', message, duration);\n\n  return (\n    <NotificationContext.Provider value={{ \n      showSuccess, \n      showError, \n      showWarning, \n      showInfo \n    }}>\n      {children}\n    </NotificationContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,mBAAmB,gBAAGL,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMM,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAMC,OAAO,GAAGP,UAAU,CAACI,mBAAmB,CAAC;EAC/C,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,0DAA0D,CAAC;EAC7E;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,eAAe;AAQ5B,OAAO,MAAMI,oBAAoB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACpD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMa,eAAe,GAAGA,CAACC,IAAI,EAAEC,OAAO,EAAEC,QAAQ,GAAG,IAAI,KAAK;IAC1D,MAAMC,EAAE,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IACrBP,gBAAgB,CAACQ,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAEH,EAAE;MAAEH,IAAI;MAAEC,OAAO;MAAEC;IAAS,CAAC,CAAC,CAAC;EACtE,CAAC;EAED,MAAMK,kBAAkB,GAAIJ,EAAE,IAAK;IACjCL,gBAAgB,CAACQ,IAAI,IAAIA,IAAI,CAACE,MAAM,CAACC,YAAY,IAAIA,YAAY,CAACN,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC/E,CAAC;EAED,MAAMO,WAAW,GAAGA,CAACT,OAAO,EAAEC,QAAQ,KAAKH,eAAe,CAAC,SAAS,EAAEE,OAAO,EAAEC,QAAQ,CAAC;EACxF,MAAMS,SAAS,GAAGA,CAACV,OAAO,EAAEC,QAAQ,KAAKH,eAAe,CAAC,OAAO,EAAEE,OAAO,EAAEC,QAAQ,CAAC;EACpF,MAAMU,WAAW,GAAGA,CAACX,OAAO,EAAEC,QAAQ,KAAKH,eAAe,CAAC,SAAS,EAAEE,OAAO,EAAEC,QAAQ,CAAC;EACxF,MAAMW,QAAQ,GAAGA,CAACZ,OAAO,EAAEC,QAAQ,KAAKH,eAAe,CAAC,MAAM,EAAEE,OAAO,EAAEC,QAAQ,CAAC;EAElF,oBACEd,OAAA,CAACC,mBAAmB,CAACyB,QAAQ;IAACC,KAAK,EAAE;MACnCL,WAAW;MACXC,SAAS;MACTC,WAAW;MACXC;IACF,CAAE;IAAAlB,QAAA,EACCA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACmB,CAAC;AAEnC,CAAC;AAACvB,GAAA,CA3BWF,oBAAoB;AAAA0B,EAAA,GAApB1B,oBAAoB;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}